@name API Core
#Windows 10.3 update 6
function number apiVersion(){return 4.2}

#Mouse events
function number appMouse(){return Mouse1&AppPos[ThisApp,number]==1}
function number click(){return ChangedMouse1&!Mouse1}
function number appClick(){return ChangedMouse1&!Mouse1&AppPos[ThisApp,number]==1}

function number fastTap(){if(ChangedMouse1&Mouse1){LongTap=SysTimer} if((SysTimer-LongTap)<7&click()){LongTap=0 return 1} if(!Mouse1){LongTap=0} return 0}
function number longTap(){if(ChangedMouse1&Mouse1){LongTap=SysTimer} if((SysTimer-LongTap)>7&Mouse1&LongTap) {LongTap=0 return 1} if(!Mouse1){LongTap=0} return 0}

function number appFastTap(){if(ChangedMouse1&appMouse()){LongTap=AppTimer} if((AppTimer-LongTap)<7&appClick()){LongTap=0 return 1} if(!Mouse1&AppPos[ThisApp,number]==1){LongTap=0} return 0}
function number appLongTap(){if(ChangedMouse1&appMouse()){LongTap=AppTimer} if((AppTimer-LongTap)>7&appMouse()&LongTap) {LongTap=0 return 1} if(!Mouse1&AppPos[ThisApp,number]==1){LongTap=0} return 0}

#System
function string sysText(){if(changed(Keyboard)&Keyboard!=13&Keyboard!=154&!inrange(Keyboard,19,20)){if(Keyboard!=127){
    SysText=SysText:sub(1,SysText:length()-SysTextLine)+toChar(Keyboard)+SysText:sub(SysText:length()-SysTextLine+1,SysText:length()) }
    else{SysText=SysText:sub(1,SysText:length()-SysTextLine-1)+SysText:sub(SysText:length()-SysTextLine+1,SysText:length()) }} return SysText}

function findUser(){
    if(!ROM["System",table]["Control",number]){findInSphere(entity():pos(),70) findSortByDistance(entity():pos())}
    else{findInSphere(Screen:entity():pos(),70) findSortByDistance(Screen:entity():pos())} }

function vector2 autoResolution(){
    local ScreenSize=Screen:entity():aabbSize()
    local AutoResolution = vec2()
    if(ScreenSize:y()>ScreenSize:x()){
        AutoResolution=vec2(512,int((ScreenSize:x()/ScreenSize:y())*512))
        if(AutoResolution:y()<200){AutoResolution[2]=int((ScreenSize:z()/ScreenSize:y())*512)} }
    if(ScreenSize:y()<ScreenSize:x()){AutoResolution=vec2(512,int((ScreenSize:y()/ScreenSize:x())*512))}
    if(ScreenSize:y()==ScreenSize:x()){AutoResolution=vec2(512)}
return AutoResolution}

function runSystem(EGPIDofApps){SystemOn=1 AppEGPID["FreeEGP",array]=array(vec2(EGPIDofApps+4,egpMaxObjects())) timer("runSystem",1) stoptimer("1")}

#Other
function array  array:shortArray(Size:normal){local Return = array() foreach(J, S:string = This){for(I = 1, S:length(), Size){Return:pushString(S:sub(I, I+Size-1))}} return Return }
function array string:shortArray(Size){local Resuilt=array() for(I=1,int(This:length()/Size+1)){Resuilt:pushString(This:sub(1+Size*(I-1),Size*I))} return Resuilt}

function array  array:cutArray(Size){local Resuilt=array() foreach(I,N:string=This){Resuilt[I,string]=N:left(Size)} return Resuilt}

function string appChat(FunctionName:string){runOnChat(1)
    #!win AppName Varriable String
    if(chatClk(find())){local AppChat=find():lastSaid():explode(" ") 
        if(AppChat[1,string]=="!win"&AppChat[2,string]==ThisApp&AppChat[3,string]==FunctionName){hideChat(1) return AppChat[4,string]} } return "" }

function appChat(){runOnChat(1)
    #!win AppName Varriable Type Number
    if(chatClk(find())){
        local AppChat=find():lastSaid():explode(" ") 
        local AppChatExplode=AppChat[5,string]:explode(",")
        if(AppChat[1,string]=="!win"){hideChat(1) if(AppChat[2,string]==ThisApp){
            switch(AppChat[4,string]){
            case "number", appN(AppChat[3,string],AppChat[5,string]:toNumber()) break
            case "string", appS(AppChat[3,string],AppChat[5,string]) break
            case "vector", appV(AppChat[3,string],vec(AppChatExplode[1,string]:toNumber(),AppChatExplode[2,string]:toNumber(),AppChatExplode[3,string]:toNumber())) break
            case "vector2", appV2(AppChat[3,string],vec2(AppChatExplode[1,string]:toNumber(),AppChatExplode[2,string]:toNumber())) break
            case "vector4", appV4(AppChat[3,string],vec4(AppChatExplode[1,string]:toNumber(),AppChatExplode[2,string]:toNumber(),AppChatExplode[3,string]:toNumber(),AppChatExplode[4,string]:toNumber())) break
            case "angle",  appA(AppChat[3,string],ang(AppChatExplode[1,string]:toNumber(),AppChatExplode[2,string]:toNumber(),AppChatExplode[3,string]:toNumber())) break
            case "entity", appE(AppChat[3,string],entity(AppChat[5,string]:toNumber())) break
            case "void", App[AppChat[2,string],table]:remove(AppChat[3,string]) break
        }
}}}}

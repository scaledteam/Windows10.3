@name ServiceKit 
#Windows 10.3 update 6

if(appStart("Diagrams",vec2(300,150),vec(0,128,64),16)){
    if(appCreate()){if(romCreate()){ romN("Var1",12) romN("Var2",30) romN("Var3",20)} romLoadAppVars() }
    if(appGraphics()){appBox(1,vec2(40,7),vec2(220,136),vec(255))}else{

    #Text fields
    appEditTextNumber(2,"Var1",vec2(100,-45),60)
    appEditTextNumber(5,"Var2",vec2(100,-25),60)
    appEditTextNumber(8,"Var3",vec2(100, -5),60)
    if(appN("Var1")<0){appN("Var1",abs(appN("Var1")))}
    if(appN("Var2")<0){appN("Var2",abs(appN("Var2")))}
    if(appN("Var3")<0){appN("Var3",abs(appN("Var3")))}
    
    #Find sum
    appN("VarSum",appN("Var1")+appN("Var2")+appN("Var3"))
    #Find persents
    appN("Var1Percent",appN("Var1")/appN("VarSum")) appN("Var2Percent",appN("Var2")/appN("VarSum")) appN("Var3Percent",appN("Var3")/appN("VarSum"))
    #Find max value
    appN("VarMax",max(appN("Var1Percent"),appN("Var2Percent"),appN("Var3Percent")))
    
    if(appChoiceMenu(11,vec2(-150,-60),"Mode",array("Circle","Boxes","Text"))){ #Choose mode
        #Second draw
        Screen:egpColor(egp(2),vec(255,220,220)) Screen:egpColor(egp(5),vec(220,255,220)) Screen:egpColor(egp(8),vec(220,220,255))
        #Clear old objects
        for(I=egp(14),egp(16)){Screen:egpRemove(I)}
        #Draw diagram
        switch(appS("Mode")){
            case "Circle",
                Screen:egpWedge(egp(14),vec2(),vec2(50)) Screen:egpColor(egp(14),vec(150)) Screen:egpColor(egp(14),vec(255,0,0)) Screen:egpSize(egp(14),0)
                Screen:egpWedge(egp(15),vec2(),vec2(50)) Screen:egpColor(egp(15),vec(150)) Screen:egpColor(egp(15),vec(0,255,0)) Screen:egpSize(egp(15),-360*(appN("Var2Percent")+appN("Var3Percent")))
                Screen:egpWedge(egp(16),vec2(),vec2(50)) Screen:egpColor(egp(16),vec(150)) Screen:egpColor(egp(16),vec(0,0,255)) Screen:egpSize(egp(16),-360*appN("Var3Percent")-0.1)
                for(I=egp(14),egp(16)){Screen:egpParent(I,egp())} 
            break
            case "Boxes",
                appBox(14,vec2(),vec2(),vec(255,0,0))
                appBox(15,vec2(),vec2(),vec(0,255,0))
                appBox(16,vec2(),vec2(),vec(0,0,255)) 
            break
            case "Text",
                appBlackText(14,(int(appN("Var1Percent")*1000)/10):toString()+"%",vec2(0,-50),25,1) Screen:egpColor(egp(14),vec(255,0,0))
                appBlackText(15,(int(appN("Var2Percent")*1000)/10):toString()+"%",vec2(0,-10),25,1) Screen:egpColor(egp(15),vec(0,255,0))
                appBlackText(16,(int(appN("Var3Percent")*1000)/10):toString()+"%",vec2(0, 30),25,1) Screen:egpColor(egp(16),vec(0,0,255)) 
            break
            } appN("Update",1) }else{
    
    if(changed(appN("VarSum"))){appN("Update",1)}
    if(appN("Update")){appN("Update",0)
        #Third rendering
        switch(appS("Mode")){
            case "Circle",
                Screen:egpSize(egp(14),0)
                Screen:egpSize(egp(15),-360*(appN("Var2Percent")+appN("Var3Percent")))
                Screen:egpSize(egp(16),-360*appN("Var3Percent")-0.1) 
            break
            case "Boxes",
                Screen:egpBox(egp(14),vec2(-40,60-appN("Var1Percent")/appN("VarMax")*50),vec2(30,appN("Var1Percent")/appN("VarMax")*100))
                Screen:egpBox(egp(15),vec2(0,  60-appN("Var2Percent")/appN("VarMax")*50),vec2(30,appN("Var2Percent")/appN("VarMax")*100))
                Screen:egpBox(egp(16),vec2(40, 60-appN("Var3Percent")/appN("VarMax")*50),vec2(30,appN("Var3Percent")/appN("VarMax")*100)) 
            break
            case "Text",
                Screen:egpSetText(egp(14),(int(appN("Var1Percent")*1000)/10):toString()+"%")
                Screen:egpSetText(egp(15),(int(appN("Var2Percent")*1000)/10):toString()+"%")
                Screen:egpSetText(egp(16),(int(appN("Var3Percent")*1000)/10):toString()+"%") 
            break }}
}} appEndSave()}



if(appStart("Calculator",vec2(120,160),vec(240),8)){
    if(appGraphics()){
        appBox(1,vec2(0,20),vec2(120,120),vec(220))
        appBox(6,vec2(),vec2(30),vec()) Screen:egpAlpha(egp(6),0)
        appBlackText(7,"",vec2(-57,-60),20)
        appBlackText(8,appS("Field2"),vec2(-57,-65),7)
        appN("SecondRender",1) }else{
    if(appN("SecondRender")){
        appBlackText(2,"+\n7\n4\n1",vec2(-80,-40),30,vec2(70,140),1) appBlackText(3,"-\n8\n5\n2",vec2(-50,-40),30,vec2(70,140),1) appBlackText(4,"*\n9\n6\n3",vec2(-20,-40),30,vec2(70,140),1) appBlackText(5,"/\n<\n0\n>",vec2( 10,-40),30,vec2(70,140),1)
        appN("SecondRender",0) }else{
        
    appV2("Choice",appChoiceHelper(vec2(-60,-40),30))
    if(inrange(appV2("Choice"),vec2(0,0),vec2(3,3))){
        Screen:egpAlpha(egp(6),180) Screen:egpPos(egp(6),appV2("Choice")*30+vec2(-45,-25))
        if(appClick()){switch(appV2("Choice")){
            case vec2(0,0), appS("Action","+") break case vec2(1,0), appS("Action","-") break case vec2(2,0), appS("Action","*") break case vec2(3,0), appS("Action","/") break
            case vec2(0,1), appN("Button",7) break   case vec2(1,1), appN("Button",8) break   case vec2(2,1), appN("Button",9) break   case vec2(3,1), appN("Delete",1) break
            case vec2(2,2), appN("Button",6) break   case vec2(1,2), appN("Button",5) break   case vec2(0,2), appN("Button",4) break   case vec2(3,2), appN("Button",-1) break
            case vec2(2,3), appN("Button",3) break   case vec2(1,3), appN("Button",2) break   case vec2(0,3), appN("Button",1) break   case vec2(3,3), appN("State",3) appN("Button",0) break }}
    }else{Screen:egpAlpha(egp(6),0)}
    
    if(changed(appS("Action"))&appS("Action")){appN("State",1) appN("Button",0) appS("Field2",appN("N1"):toString()+appS("Action")) }
    switch(appN("State")){
        case 0,
            if(appN("Delete")){appN("N1",appN("N1"):toString():left(appN("N1"):toString():length()-1):toNumber()) appN("Delete",0)}
            if(appN("Button")!=-1){if(changed(appN("Button"))&appN("Button")){appN("N1",appN("N1")*10+appN("Button")) appN("Button",0)}}
            else{appN("N1",appN("N1")*10) appN("Button",0)}
            Screen:egpSetText(egp(7),appN("N1"):toString()) appS("Field2",appN("N1"):toString()) 
        break
        case 1,
            if(appN("Delete")){appN("N2",appN("N2"):toString():left(appN("N2"):toString():length()-1):toNumber()) appN("Delete",0)}
            if(appN("Button")!=-1){if(changed(appN("Button"))&appN("Button")){appN("N2",appN("N2")*10+appN("Button")) appN("Button",0)}}
            else{appN("N2",appN("N2")*10) appN("Button",0)}
            Screen:egpSetText(egp(7),appN("N2"):toString()) appS("Field2",appN("N1"):toString()+appS("Action")+appN("N2"):toString()) 
        break
        case 3,
            if(changed(appN("Button"))&appN("Button")){appN("State",0)}
            if(appN("N1")|appN("N2")){switch(appS("Action")){
                case "+", appN("Resuilt",appN("N1")+appN("N2")) break case "-", appN("Resuilt",appN("N1")-appN("N2")) break case "*", appN("Resuilt",appN("N1")*appN("N2")) break case "/", appN("Resuilt",appN("N1")/appN("N2")) break }
                appN("N1",0) appN("N2",0) appS("Action","") Screen:egpSetText(egp(7),appN("Resuilt"):toString()) appS("Field2",appS("Field2")+"="+appN("Resuilt")) } 
        break
    }
    if(changed(appS("Field2"))){Screen:egpSetText(egp(8),appS("Field2"))}
}} appEnd()}

@name SysApps
#Windows 10.3 update 6

if(appStart("DialogApp",vec2(250,50)+glbV2("DialogApp","AddSize"),ROM["System",table]["Theme",vector]*0.8,7)){ 
    if(appGraphics()){appUniText(-1,appS("Text"),vec2(-115,-18),appN("TextSize"),0)
        switch(appS("Type")){
            case "BigNotify", appUniText(-1,appS("Text"):explode("\n"):shortArray(240/textSizeX(appN("TextSize"))),vec2(-115,-18-appV2("AddSize"):y()/2),appN("TextSize")) break
            case "Input", SysTextEnable=egp(4) break
            case "FieldNotify", case "Choose", appUniText(-1,"DialogApp",vec2(0,-(vec2(250,50)+glbV2("DialogApp","AddSize")):y()/2+1),10,1) break }}else{
    
    switch(appS("Type")){
        case "Notify", if(appButton(5,"OK",vec2(86,12),vec2(60,15))){appN("Answear",1)} break
        case "Action",
            if(appButton(1,"OK",vec2(16,12),vec2(60,15))){appN("Answear",1)}
            if(appButton(4,"Calcel",vec2(86,12),vec2(60,15))){AppClose="DialogApp"} break
        case "Input", 
            if(appButton(1,"OK",vec2(86,12),vec2(60,15))){appN("Answear",1) appS("OutText",appS("Input"))}
            if(appEditTextString(4,"Input",vec2(-40,12),160)){appN("Answear",1) appS("OutText",appS("Input"))} break
        case "FieldNotify",
            appArrayFieldShort(1,"BigNotify",vec2(0,7.5),vec2(200,40+appN("TextSize")),appS("Text"):explode("\n")) break
        case "Choose",
            appArrayFieldUse(1,"FieldNotify",vec2(0,7.5),vec2(200,40+appN("TextSize")),appS("Text"):explode("\n"))
            if(appN("FieldNotify")){appN("Answear",1) appS("OutText",appS("Text"):explode("\n")[appN("FieldNotify"),string])} break
    }
} if(appEnd()){DialogApp=""}}



if(appStart("Settings",vec2(300,150),vec(200),27)){ 
    if(appGraphics()){
        appBox(2,vec2(-110,7),vec2(80,136),vec(228))
        appChoiceMenu(3,vec2(-150,-61),"Activity",array("Wallpaper","Colors","Resolution","Files","About"))
        appBox(1,vec2(40,7),vec2(220,136),vec(255)) }else{
    
    #Draw app
    appChoiceMenu(3,vec2(-150,-61),"Activity",array("Wallpaper","Colors","Resolution","Files","About"))
    if(activityManager(6)){switch(appS("Activity")){
        case "Wallpaper",
            if(activityCreate()){appR("WallpaperPack",array(vec(0,140,255),vec(255,200,50),vec(0,130,65),vec(130,40,50)))}
            if(activityGraphics()){
                appBlackText(6,"Choose your wallpapers",vec2(-60,-50))
                for(I=1,4){appBox(6+I,vec2(-75+45*I,-5),vec2(40,40),appR("WallpaperPack")[I,vector])}
                Screen:egpBox(egp(11),vec2(-30,47),vec2(40,40)) Screen:egpParent(egp(11),egp()) }else{
            local Wallpaper = ROM["System",table]["Wallpaper",vector]
            Screen:egpColor(egp(11),Wallpaper)
            appN("WallpaperColorR",Wallpaper:x()) appN("WallpaperColorG",Wallpaper:y()) appN("WallpaperColorB",Wallpaper:z())
            if(appClick()){for(I=1,4){if(egpInrange(egp(6+I))){ROM["System",table]["Wallpaper",vector]=appR("WallpaperPack")[I,vector]}}}
            if(appSliderDynamic(12,"WallpaperColorR",vec2(0,37),100,0,255)){ROM["System",table]["Wallpaper",vector][1]=appN("WallpaperColorR")}
            if(appSliderDynamic(15,"WallpaperColorG",vec2(0,47),100,0,255)){ROM["System",table]["Wallpaper",vector][2]=appN("WallpaperColorG")}
            if(appSliderDynamic(18,"WallpaperColorB",vec2(0,57),100,0,255)){ROM["System",table]["Wallpaper",vector][3]=appN("WallpaperColorB")} 
        } break
        case "Colors",
            if(activityCreate()){appR("ThemePack",array(vec(200,0,0),vec(0,200,0),vec(70,140,255),vec(150)))}
            if(activityGraphics()){
                appBlackText(6,"Choose your theme color",vec2(-60,-50))
                for(I=1,4){appBox(6+I,vec2(-75+45*I,-5),vec2(40,40),appR("ThemePack")[I,vector])}
                Screen:egpBox(egp(11),vec2(-30,47),vec2(40,40)) Screen:egpParent(egp(11),egp()) }else{
            local Theme = ROM["System",table]["Theme",vector]
            Screen:egpColor(egp(11),Theme) Screen:egpColor(egp(3),Theme)
            appN("ThemeColorR",Theme:x()) appN("ThemeColorG",Theme:y()) appN("ThemeColorB",Theme:z())
            if(appClick()){for(I=1,4){if(egpInrange(egp(6+I))){ROM["System",table]["Theme",vector]=appR("ThemePack")[I,vector]}}}
            if(appSliderDynamic(12,"ThemeColorR",vec2(0,37),100,0,255)){ROM["System",table]["Theme",vector][1]=appN("ThemeColorR")}
            if(appSliderDynamic(15,"ThemeColorG",vec2(0,47),100,0,255)){ROM["System",table]["Theme",vector][2]=appN("ThemeColorG")}
            if(appSliderDynamic(18,"ThemeColorB",vec2(0,57),100,0,255)){ROM["System",table]["Theme",vector][3]=appN("ThemeColorB")} 
        } break
        case "Resolution",
            if(activityGraphics()){
                appN("ResolutionX",ROM["System",table]["Resolution",vector2]:x()) appN("ResolutionY",ROM["System",table]["Resolution",vector2]:y()) appV2("ResolutionXY",vec2(appN("ResolutionX"),appN("ResolutionY")))
                appBlackText(6,"Choose your resolution",vec2(-60,-50))
                local ResolutionShow=clamp(Resolution,vec2(300,150),vec2(300,150)*6)
                appBox(7,vec2(-50,-30)+ResolutionShow/12,ResolutionShow/6,ROM["System",table]["Wallpaper",vector])
                appBox(8,7,vec2(),vec2(300,150)/6,vec(200))
                appBox(9,7,vec2(0,ResolutionShow:y()/12-2.5),vec2(ResolutionShow:x()/6,5),vec(40)) Screen:egpAlpha(egp(9),220)
                appBox(10,7,vec2(-ResolutionShow:x()/12+100/6,ResolutionShow:y()/12-65/6-5),vec2(200,130)/6,vec(60,60,60)) Screen:egpAlpha(egp(10),220)
                appBlackText(23,"You can use 2 screens with Device input",vec2(150,69),6,2) }else{
            if(changed(appN("ResolutionX")+appN("ResolutionY"))){
                local ResolutionShow=clamp(appV2("ResolutionXY"),vec2(300,150),vec2(300,150)*6)
                appV2("ResolutionXY",vec2(appN("ResolutionX"),appN("ResolutionY")))
                Screen:egpBox(egp(7),vec2(-50,-30)+ResolutionShow/12,ResolutionShow/6)
                Screen:egpBox(egp(9),vec2(0,ResolutionShow:y()/12-2.5),vec2(ResolutionShow:x()/6,5))
                Screen:egpBox(egp(10),vec2(-ResolutionShow:x()/12+100/6,ResolutionShow:y()/12-75/6-5),vec2(200,150)/6) }
            if(appEditTextNumber(11,"ResolutionX",vec2(100,-20),60)){ROM["System",table]["Resolution",vector2]=appV2("ResolutionXY")}
            if(appEditTextNumber(14,"ResolutionY",vec2(100,  0),60)){ROM["System",table]["Resolution",vector2]=appV2("ResolutionXY")}
            if(appButton(17,"Reboot",vec2(100,20),vec2(60,15))){DialogApp="Settings Reboot"} 
            if(appButton(20,"Auto",vec2(100,40),vec2(60,15))){
                appV2("ResolutionXY",autoResolution())
                appN("ResolutionX",appV2("ResolutionXY"):x())
                appN("ResolutionY",appV2("ResolutionXY"):y())
                Screen:egpSetText(egp(13),"512")
                Screen:egpSetText(egp(16),appV2("ResolutionXY"):y():toString())
                ROM["System",table]["Resolution",vector2]=appV2("ResolutionXY")} 
        } break
        case "Files",
            runOnFile(1)
            if(activityCreate()){fileList("Windows10/")}
            if(activityGraphics()){
                appBlackText(6,"Load file:",vec2(-60,-50))
                appN("Entity",ROM["System",table]["Control",number])
                appBlackText(7,"Your gTable - Win"+entity():id():toString(),vec2(150,65),10,2)
                appN("FullLoad",ROM["System",table]["FullLoad",number]) }else{
            if(appTimer(5000)){fileList("Windows10/") Update="Settings File"}
            if(fileLoadedList()){appArrayFieldUseCTM(8,"File",vec2(-10,15),vec2(110,100),fileReadList(),array("Load","Save","Preview"))}
            switch(appN("FileAction")){
                case 1, fileLoad( "Windows10/"+fileReadList()[appN("File"),string]) appN("MakeLoad",1) break
                case 2, fileWrite("Windows10/"+fileReadList()[appN("File"),string],vonEncode(ROM:toTable())) DialogApp="Settings Done" break
                case 3, fileLoad( "Windows10/"+fileReadList()[appN("File"),string]) appN("MakeLoad",3) break }
                if(appN("FileAction")){appN("FileAction",0)}
            if(fileClk()){switch(appN("MakeLoad")){
                case 1, local VonDecodeTable=vonDecodeTable(fileRead())
                    if(ROM["Version",number]==VonDecodeTable["Version",number]){
                        romLoad(VonDecodeTable)
                        Screen:egpColor(egp(3),ROM["System",table]["Theme",vector])
                        ROM["System",table]["AllApps",table]=table() }
                    else{DialogApp="Settings Wrong Version"} break
                case 3, appS("FilePreview",vonDecodeTable(fileRead()):toString()) DialogApp="Settings FilePreview" break }
                if(appN("MakeLoad")){appN("MakeLoad",0)}}
            
            if(appCheckBox(14,"FullLoad","FullLoad",vec2(50,-35))){ROM["System",table]["FullLoad",number]=appN("FullLoad") DialogApp="Settings Reboot"}
            if(appButtonToggle(18,"Entity",vec2(90,-5),vec2(80,15),array("Entity","Screen"))){ROM["System",table]["Control",number]=appN("Entity")}
            if(appButton(21,"New file",vec2(90,15),vec2(80,15))){DialogApp="Settings New File"}
            if(appButton(24,"Delete file",vec2(90,35),vec2(80,15))){DialogApp="Settings Delete File" print("C:\\Program Files\\Steam\\steamapps\\common\\GarrysMod\\garrysmod\\data\\e2files\\windows10\nOR"+"\nC:\\Program Files (x86)\\Steam\\steamapps\\common\\GarrysMod\\garrysmod\\data\\e2files\\windows10")}
        } break
        case "About",
            if(activityGraphics()){
                local Date=ROM["System",table]["CreateDate",table]
                if(!Date){Date=date()}
                appBlackText(6,array(
                "Windows 10.3",
                "Version: update 6",
                "API Version: "+apiVersion(),
                "ROM Version: "+ROM["Version",string],
                "ROM date: "+Date["day",number]+"."+Date["month",number]+"."+Date["year",number]
                ),vec2(-60,-55),10)
                appBlackText(7,"Ops use: "+ops(),vec2(-60,-5))
                appBlackText(8,("Use by: "+find():name()):left(220/textSizeX(10)),vec2(-60,5)) }else{
            Screen:egpSetText(egp(7),"Ops use: "+ops())
            if(changed(find():name())){Screen:egpSetText(egp(8),("Use by: "+find():name()):left(220/textSizeX(10)))}
            if(appButton(11,"Update",vec2(110,60),vec2(60,15))){DialogApp="Settings About" print("http://www.wiremod.com/forum/finished-contraptions/34849-windows-10-e2.html")}
            if(appButton(14,"Autors",vec2(40,60),vec2(60,15))){appS("Activity","Autors")} 
        } break
        case "Autors",
            if(activityGraphics()){
                appBlackText(6,array(
                "Main developer: scaled",
                "    STEAM_0:1:52598362",
                "Apps:",
                "3D renderer: CornerPin",
                "    STEAM_0:0:40468303"
                ),vec2(-60,-55),10) }else{
            if(appButton(7,"Go back",vec2(110,60),vec2(60,15))){appS("Activity","About")} #Cost 3 egpID.
        } break
    }}
    if(DialogApp){
        if(dialogApp("Settings Reboot","Action",10,"You want reboot?")){reset()}
           dialogApp("Settings About","BigNotify",10,"http://www.wiremod.com/forum/finished-contraptions/34849-windows-10-e2.html")
           dialogApp("Settings FilePreview","FieldNotify",100,appS("FilePreview"))
        if(dialogApp("Settings New File","Input",10,"Enter file name")){fileWrite("Windows10/"+glbS("DialogApp","OutText")+".txt",vonEncode(ROM:toTable()))}
           dialogApp("Settings Done","Notify",10,"Operation done.")
           dialogApp("Settings Wrong Version","Notify",10,"Wrong version!")
           dialogApp("Settings Delete File","BigNotify",10,"File core can't delete files. You can go to C:\\Program Files\\Steam\\steamapps\\common\\GarrysMod\\garrysmod\\data\\e2files\\windows10 or same directory and delete needed files.") }
} appEnd()}



if(appStart("TaskM",vec2(300,150),vec(32,64,128),11)){ 
    if(appGraphics()){Screen:egpSetText(egp(-1),"TaskManager")}else{
    appChoiceMenu(1,vec2(-150,-61),"Activity",array("Running","All Apps","ROM","Memory","EGPID","Device"))
    if(activityManager(4)){switch(appS("Activity")){
        case "Running",
            if(appTimer(1000)){Update="TaskM Running"}
            appArrayFieldUseCTM(4,"Running",vec2(40,4),vec2(220,130),AppPos:flip():toArray(),array("Kill","Call App","Set 0 pos","Info"))
            switch(appN("RunningAction")){
                case 1, AppClose=AppPos:flip()[appN("Running"),string] break
                case 2, callApp(AppPos:flip()[appN("Running"),string]) break
                case 3, Screen:egpPos(egp(AppPos:flip()[appN("Running"),string]),Resolution/2) glbV2(AppPos:flip()[appN("Running"),string],"Pos",Resolution/2) break
                case 4, DialogApp="TaskM AboutApp" appS("AboutApp",AppPos:flip()[appN("Running"),string]) break
            } if(appN("RunningAction")){appN("RunningAction",0)} 
        break
        case "ROM",
            if(appTimer(1000)){Update="TaskM ROM"}
            appArrayField(4,"ROM",vec2(40,4),vec2(220,130),ROM:toTable():toString():explode("\n")) 
        break
        case "All Apps",
            appArrayFieldUseCTM(4,"AllApps",vec2(40,4),vec2(220,130),ROM["System",table]["AllApps",table]:keys(),array("Run","Info"))
            switch(appN("AllAppsAction")){ 
                case 1, appLaunch(ROM["System",table]["AllApps",table]:keys()[appN("AllApps"),string]) break
                case 2,DialogApp="TaskM AboutApp" appS("AboutApp",ROM["System",table]["AllApps",table]:keys()[appN("AllApps"),string])  break
            } if(appN("AllAppsAction")){appN("AllAppsAction",0)} 
        break
        case "Memory",
            if(appTimer(1000)){Update="TaskM Memory"}
            appArrayField(4,"Memory",vec2(40,4),vec2(220,130),App:toString():explode("\n")) 
        break
        case "EGPID",
            if(appTimer(1000)){Update="TaskM EGPID"}
            appArrayField(4,"EGPID",vec2(40,4),vec2(220,130),AppEGPID:toString():explode("\n")) 
        break
        case "Includes",
            appArrayFieldUseCTM(4,"Includes",vec2(40,4),vec2(220,130),ROM["System",table]["Includes",array],array("Add","Delete","Inialize"))
            switch(appN("IncludesAction")){
                case 1, DialogApp="TaskM Includes" break
                case 2, ROM["System",table]["Includes",array]:remove(appN("Includes")) Update="TaskM Includes" break
                case 3, if(!ROM["System",table]["Includes",array]){ROM["System",table]["Includes",array]=array("Windows10/Apps/YourApp")} break
            } if(appN("IncludesAction")){appN("IncludesAction",0)} 
        break
        case "Device",
            if(appTimer(1000)){Update="TaskM Device" appR("DeviceInOut",Device:inputs():add(Device:outputs()))}
            appArrayFieldUseCTM(4,"Device",vec2(40,4),vec2(220,130),appR("DeviceInOut"),array("Set String","Set Number","Print"))
            switch(appN("DeviceAction")){
                case 1, DialogApp="TaskM SetString" break
                case 2, DialogApp="TaskM SetNumber" break
                case 3, DialogApp="TaskM Print" break
            } if(appN("DeviceAction")){appN("DeviceAction",0)} 
        break
    }}
    
    if(DialogApp){
        dialogApp("TaskM AboutApp","BigNotify",10,
            "Name: "+appS("AboutApp")+
            "\nMemory: "+App[appS("AboutApp"),table]:count()+" values"+
            "\nROM: "+ROM["Apps",table][appS("AboutApp"),table]:count()+" values"+
            "\nAppPos: "+AppPos[appS("AboutApp"),number]+
            "\nNumber of EGPIDs: "+AppEGPID[appS("AboutApp"),vector2]:y())
        if(dialogApp("TaskM Icon","Input",10,"Enter app name")){ROM["Apps",table]["StartMenu",table]["IconList",array][ROM["Apps",table]["StartMenu",table]["IconList",array]:count()+1,string]=glbS("DialogApp","OutText") Update="TaskM IconList"}
        if(dialogApp("TaskM Includes","Input",10,"Enter app name")){ROM["System",table]["Includes",array][ROM["System",table]["Includes",array]:count()+1,string]=glbS("DialogApp","OutText") Update="TaskM Includes"}
        if(dialogApp("TaskM SetString","Input",10,"Enter string")){Device[appR("DeviceInOut")[appN("Device"),string],string]=glbS("DialogApp","OutText")}
        if(dialogApp("TaskM SetNumber","Input",10,"Enter number")){Device[appR("DeviceInOut")[appN("Device"),string],number]=glbS("DialogApp","OutText"):toNumber()}
           dialogApp("TaskM Print","Notify",10,Device[appR("DeviceInOut")[appN("Device"),string],string]) }
    
} appEnd()}

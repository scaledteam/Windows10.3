@name Windows10.3 
@inputs [Screen Device]:wirelink Keyboard
@persist SystemOn Resolution:vector2 #System
@persist CursorPos:vector2 Mouse1 ChangedMouse1 #IO
@persist ROM:table FirstFile:string ReadOnly #ROM
@persist SysTimerNum SysTimer Power NowPower AppTimerNum AppTimer #Timer
@persist [App AppPos AppEGPID]:table [ThisApp AppClose AppMove]:string FullLoad #Apps
@persist SysTextEnable SysTextLine LongTap StartEGPID [AppLaunch AppCreate AppGraphics SysText DialogApp Update StartMenuChoose]:string #Functions

if(duped()){reset()}
if(first()){#Functions
    #AppBuild
    function number apiVersion(){return 4.1}
    function number egp(AppName:string){return AppEGPID[AppName,vector2]:x()}
    function number egp(AppName:string,EGPID){return AppEGPID[AppName,vector2]:x()+EGPID}
    function number egp(){return AppEGPID[ThisApp,vector2]:x()}
    function number egp(EGPID){return AppEGPID[ThisApp,vector2]:x()+EGPID}
    
    function egpAdvBox(ID,ParentID,Pos:vector2,Size:vector2,Color:vector){Screen:egpBox(ID,Pos,Size) Screen:egpColor(ID,Color) Screen:egpParent(ID,ParentID) } #Cost 1 egpID.
    function appBox(EGPID,Pos:vector2,Size:vector2,Color:vector){egpAdvBox(egp(EGPID),egp(),Pos,Size,Color)} #Cost 1 egpID.
    function appBox(EGPID,ParentID,Pos:vector2,Size:vector2,Color:vector){Screen:egpBox(egp(EGPID),Pos,Size) Screen:egpColor(egp(EGPID),Color) Screen:egpParent(egp(EGPID),egp(ParentID)) } #Cost 1 egpID.
    
    function egpAdvBoxOutline(ID,ParentID,Pos:vector2,Size:vector2,Color:vector){Screen:egpBoxOutline(ID,Pos,Size) Screen:egpColor(ID,Color) Screen:egpParent(ID,ParentID) } #Cost 1 egpID.
    function appBoxOutline(EGPID,Pos:vector2,Size:vector2,Color:vector){egpAdvBoxOutline(egp(EGPID),egp(),Pos,Size,Color)} #Cost 1 egpID.
    function appBoxOutline(EGPID,ParentID,Pos:vector2,Size:vector2,Color:vector){Screen:egpBoxOutline(egp(EGPID),Pos,Size) Screen:egpColor(egp(EGPID),Color) Screen:egpParent(egp(EGPID),egp(ParentID)) } #Cost 1 egpID.
    
    function number egpInrange(EGPID){return inrange(CursorPos,Screen:egpPos(Screen:egpParent(EGPID))+Screen:egpPos(EGPID)-Screen:egpSize(EGPID)/2,Screen:egpPos(Screen:egpParent(EGPID))+Screen:egpPos(EGPID)+Screen:egpSize(EGPID)/2)}
    function number egpAdvInrange(Pos1:vector2,Pos2:vector2,EGPparent){return inrange(CursorPos,Screen:egpPos(EGPparent)+Pos1,Screen:egpPos(EGPparent)+Pos2)}
    function number egpAppInrange(Pos1:vector2,Pos2:vector2){return inrange(CursorPos,Screen:egpPos(egp())+Pos1,Screen:egpPos(egp())+Pos2)}
    
    function vector2 symbolSize(){return Resolution/512*vec2(0.52,1)}
    function number textSizeX(Number){return int(symbolSize():x()*int(Number/symbolSize():y())/2)*2}
    
    function egpWhiteText(ID,   ParentID,Text:string,Pos:vector2,Size){Screen:egpText(ID,Text,Pos) Screen:egpParent(ID,ParentID) Screen:egpSize(ID,Size/symbolSize():y()) } #Cost 1 egpID.
    function appWhiteText(EGPID,         Text:string,Pos:vector2){egpWhiteText(egp(EGPID),egp(),Text,Pos,10)} #Cost 1 egpID.
    function appWhiteText(EGPID,         Text:string,Pos:vector2,Size){egpWhiteText(egp(EGPID),egp(),Text,Pos,Size)} #Cost 1 egpID.
    function egpWhiteText(ID,   ParentID,Text:string,Pos:vector2,Size,Align){egpWhiteText(ID,ParentID,Text,Pos,Size) Screen:egpAlign(ID,Align) } #Cost 1 egpID.
    function appWhiteText(EGPID,         Text:string,Pos:vector2,Size,Align){egpWhiteText(egp(EGPID),egp(),Text,Pos,Size,Align)} #Cost 1 egpID.
    function appWhiteText(EGPID,ParentID,Text:string,Pos:vector2,Size,Align){egpWhiteText(egp(EGPID),egp(ParentID),Text,Pos,Size,Align)} #Cost 1 egpID.
    function egpWhiteText(ID,   ParentID,Array:array,Pos:vector2,Size){Screen:egpTextLayout(ID,Array:concat("\n"),Pos,vec2(Resolution:x(),Array:count()*Size)) Screen:egpSize(ID,Size/symbolSize():y()) Screen:egpParent(ID,ParentID)} #Cost 1 egpID.
    function appWhiteText(EGPID,         Array:array,Pos:vector2,Size){egpWhiteText(egp(EGPID),egp(),Array,Pos,Size)} #Cost 1 egpID.
    function appWhiteText(EGPID,         Array:array,Pos:vector2){egpWhiteText(egp(EGPID),egp(),Array,Pos,10)} #Cost 1 egpID.
    function egpWhiteText(ID,   ParentID,Text:string,Pos:vector2,Size,SizeV2:vector2){Screen:egpTextLayout(ID,Text,Pos,SizeV2) Screen:egpSize(ID,Size/symbolSize():y()) Screen:egpParent(ID,ParentID)} #Cost 1 egpID.
    function appWhiteText(EGPID,         Text:string,Pos:vector2,Size,SizeV2:vector2){egpWhiteText(egp(EGPID),egp(),Text,Pos,Size,SizeV2)} #Cost 1 egpID.
    function appWhiteText(EGPID,         Text:string,Pos:vector2,SizeV2:vector2){egpWhiteText(egp(EGPID),egp(),Text,Pos,10,SizeV2)} #Cost 1 egpID.
    function egpWhiteText(ID,   ParentID,Text:string,Pos:vector2,Size,SizeV2:vector2,Align){egpWhiteText(ID,ParentID,Text,Pos,Size,SizeV2) Screen:egpAlign(ID,Align)} #Cost 1 egpID.
    function appWhiteText(EGPID,         Text:string,Pos:vector2,Size,SizeV2:vector2,Align){egpWhiteText(egp(EGPID),egp(),Text,Pos,Size,SizeV2,Align)} #Cost 1 egpID.

    function egpBlackText(ID,   ParentID,Text:string,Pos:vector2,Size){egpWhiteText(ID,ParentID,Text,Pos,Size) Screen:egpColor(ID,vec()) } #Cost 1 egpID.
    function appBlackText(EGPID,         Text:string,Pos:vector2){egpBlackText(egp(EGPID),egp(),Text,Pos,10)} #Cost 1 egpID.
    function appBlackText(EGPID,         Text:string,Pos:vector2,Size){egpBlackText(egp(EGPID),egp(),Text,Pos,Size)} #Cost 1 egpID.
    function egpBlackText(ID,   ParentID,Text:string,Pos:vector2,Size,Align){egpBlackText(ID,ParentID,Text,Pos,Size) Screen:egpAlign(ID,Align) } #Cost 1 egpID.
    function appBlackText(EGPID,         Text:string,Pos:vector2,Size,Align){egpBlackText(egp(EGPID),egp(),Text,Pos,Size,Align)} #Cost 1 egpID.
    function appBlackText(EGPID,ParentID,Text:string,Pos:vector2,Size,Align){egpBlackText(egp(EGPID),egp(ParentID),Text,Pos,Size,Align)} #Cost 1 egpID.
    function egpBlackText(ID,   ParentID,Array:array,Pos:vector2,Size){egpWhiteText(ID,ParentID,Array,Pos,Size) Screen:egpColor(ID,vec())} #Cost 1 egpID.
    function appBlackText(EGPID,         Array:array,Pos:vector2,Size){egpBlackText(egp(EGPID),egp(),Array,Pos,Size)} #Cost 1 egpID.
    function appBlackText(EGPID,         Array:array,Pos:vector2){egpBlackText(egp(EGPID),egp(),Array,Pos,10)} #Cost 1 egpID.
    function egpBlackText(ID,   ParentID,Text:string,Pos:vector2,Size,SizeV2:vector2){egpWhiteText(ID,ParentID,Text,Pos,Size,SizeV2) Screen:egpColor(ID,vec())} #Cost 1 egpID.
    function appBlackText(EGPID,         Text:string,Pos:vector2,Size,SizeV2:vector2){egpBlackText(egp(EGPID),egp(),Text,Pos,Size,SizeV2)} #Cost 1 egpID.
    function appBlackText(EGPID,         Text:string,Pos:vector2,SizeV2:vector2){egpBlackText(egp(EGPID),egp(),Text,Pos,10,SizeV2)} #Cost 1 egpID.
    function egpBlackText(ID,   ParentID,Text:string,Pos:vector2,Size,SizeV2:vector2,Align){egpBlackText(ID,ParentID,Text,Pos,Size,SizeV2) Screen:egpAlign(ID,Align)} #Cost 1 egpID.
    function appBlackText(EGPID,         Text:string,Pos:vector2,Size,SizeV2:vector2,Align){egpBlackText(egp(EGPID),egp(),Text,Pos,Size,SizeV2,Align)} #Cost 1 egpID.

    function vector egpUniColor(Color:vector){return vec(255)*(array(Color:x(),Color:y(),Color:z()):average()<190)}
    function vector egpUniColor(ParentID){return egpUniColor(Screen:egpColor(ParentID))}
    function egpUniText(ID,   ParentID,Text:string,Pos:vector2,Size){egpWhiteText(ID,ParentID,Text,Pos,Size) Screen:egpColor(ID,egpUniColor(ParentID)) } #Cost 1 egpID.
    function appUniText(EGPID,         Text:string,Pos:vector2){egpUniText(egp(EGPID),egp(),Text,Pos,10)} #Cost 1 egpID.
    function appUniText(EGPID,         Text:string,Pos:vector2,Size){egpUniText(egp(EGPID),egp(),Text,Pos,Size)} #Cost 1 egpID.
    function egpUniText(ID,   ParentID,Text:string,Pos:vector2,Size,Align){egpUniText(ID,ParentID,Text,Pos,Size) Screen:egpAlign(ID,Align) } #Cost 1 egpID.
    function appUniText(EGPID,         Text:string,Pos:vector2,Size,Align){egpUniText(egp(EGPID),egp(),Text,Pos,Size,Align)} #Cost 1 egpID.
    function appUniText(EGPID,ParentID,Text:string,Pos:vector2,Size,Align){egpUniText(egp(EGPID),egp(ParentID),Text,Pos,Size,Align)} #Cost 1 egpID.
    function egpUniText(ID,   ParentID,Array:array,Pos:vector2,Size){egpWhiteText(ID,ParentID,Array,Pos,Size) Screen:egpColor(ID,egpUniColor(ParentID))} #Cost 1 egpID.
    function appUniText(EGPID,         Array:array,Pos:vector2,Size){egpUniText(egp(EGPID),egp(),Array,Pos,Size)} #Cost 1 egpID.
    function appUniText(EGPID,         Array:array,Pos:vector2){egpUniText(egp(EGPID),egp(),Array,Pos,10)} #Cost 1 egpID.
    function egpUniText(ID,   ParentID,Text:string,Pos:vector2,Size,SizeV2:vector2){egpWhiteText(ID,ParentID,Text,Pos,Size,SizeV2) Screen:egpColor(ID,egpUniColor(ParentID))} #Cost 1 egpID.
    function appUniText(EGPID,         Text:string,Pos:vector2,Size,SizeV2:vector2){egpUniText(egp(EGPID),egp(),Text,Pos,Size,SizeV2)} #Cost 1 egpID.
    function appUniText(EGPID,         Text:string,Pos:vector2,SizeV2:vector2){egpUniText(egp(EGPID),egp(),Text,Pos,10,SizeV2)} #Cost 1 egpID.
    function egpUniText(ID,   ParentID,Text:string,Pos:vector2,Size,SizeV2:vector2,Align){egpUniText(ID,ParentID,Text,Pos,Size,SizeV2) Screen:egpAlign(ID,Align)} #Cost 1 egpID.
    function appUniText(EGPID,         Text:string,Pos:vector2,Size,SizeV2:vector2,Align){egpUniText(egp(EGPID),egp(),Text,Pos,Size,SizeV2,Align)} #Cost 1 egpID.
    
    #Read persist
    function number   glbN(AppName:string,VarName:string){return App[AppName,table][VarName,number]}
    function string   glbS(AppName:string,VarName:string){return App[AppName,table][VarName,string]}
    function vector   glbV(AppName:string,VarName:string){return App[AppName,table][VarName,vector]}
    function vector2 glbV2(AppName:string,VarName:string){return App[AppName,table][VarName,vector2]}
    function vector4 glbV4(AppName:string,VarName:string){return App[AppName,table][VarName,vector4]}
    function array    glbR(AppName:string,VarName:string){return App[AppName,table][VarName,array]}
    function table    glbT(AppName:string,VarName:string){return App[AppName,table][VarName,table]}
    function entity   glbE(AppName:string,VarName:string){return App[AppName,table][VarName,entity]}
    
    function number   appN(VarName:string){return App[ThisApp,table][VarName,number]}
    function string   appS(VarName:string){return App[ThisApp,table][VarName,string]}
    function vector   appV(VarName:string){return App[ThisApp,table][VarName,vector]}
    function vector2 appV2(VarName:string){return App[ThisApp,table][VarName,vector2]}
    function vector4 appV4(VarName:string){return App[ThisApp,table][VarName,vector4]}
    function array    appR(VarName:string){return App[ThisApp,table][VarName,array]}
    function table    appT(VarName:string){return App[ThisApp,table][VarName,table]}
    function entity   appE(VarName:string){return App[ThisApp,table][VarName,entity]}
    
    #Write persist
    function glbN(AppName:string,VarName:string,Write)          {App[AppName,table][VarName,number]=Write}
    function glbS(AppName:string,VarName:string,Write:string)   {App[AppName,table][VarName,string]=Write}
    function glbV(AppName:string,VarName:string,Write:vector)   {App[AppName,table][VarName,vector]=Write}
    function glbV2(AppName:string,VarName:string,Write:vector2) {App[AppName,table][VarName,vector2]=Write}
    function glbV4(AppName:string,VarName:string,Write:vector4) {App[AppName,table][VarName,vector4]=Write}
    function glbE(AppName:string,VarName:string,Write:entity)   {App[AppName,table][VarName,entity]=Write}
    function glbR(AppName:string,VarName:string,Write:array)            {App[AppName,table][VarName,array]=Write}
    function glbR(AppName:string,VarName:string,ID,Write)               {App[AppName,table][VarName,array][ID,number]=Write}
    function glbR(AppName:string,VarName:string,ID,Write:string)        {App[AppName,table][VarName,array][ID,string]=Write}
    function glbT(AppName:string,VarName:string,Write:table)            {App[AppName,table][VarName,table]=Write}
    function glbT(AppName:string,VarName:string,ID:string,Write)        {App[AppName,table][VarName,table][ID,number]=Write}
    function glbT(AppName:string,VarName:string,ID:string,Write:string) {App[AppName,table][VarName,table][ID,string]=Write}
    
    function appN(VarName:string,Write)          {App[ThisApp,table][VarName,number]=Write}
    function appS(VarName:string,Write:string)   {App[ThisApp,table][VarName,string]=Write}
    function appV(VarName:string,Write:vector)   {App[ThisApp,table][VarName,vector]=Write}
    function appV2(VarName:string,Write:vector2) {App[ThisApp,table][VarName,vector2]=Write}
    function appV4(VarName:string,Write:vector4) {App[ThisApp,table][VarName,vector4]=Write}
    function appE(VarName:string,Write:entity)   {App[ThisApp,table][VarName,entity]=Write}
    function appR(VarName:string,Write:array)            {App[ThisApp,table][VarName,array]=Write}
    function appR(VarName:string,ID,Write)               {App[ThisApp,table][VarName,array][ID,number]=Write}
    function appR(VarName:string,ID,Write:string)        {App[ThisApp,table][VarName,array][ID,string]=Write}
    function appT(VarName:string,Write:table)            {App[ThisApp,table][VarName,table]=Write}
    function appT(VarName:string,ID:string,Write)        {App[ThisApp,table][VarName,table][ID,number]=Write}
    function appT(VarName:string,ID:string,Write:string) {App[ThisApp,table][VarName,table][ID,string]=Write}
    
    #ROM functions
    function romWrite(){if(!ReadOnly){fileWrite(FirstFile,vonEncode(ROM))}}
    function romSaveApp(AppName:string){ROM["Apps",table][AppName,table]=App[AppName,table] romWrite()}
    function romLoadApp(AppName:string){App[AppName,table]=ROM["Apps",table][AppName,table]}
    function romLoadAppVars(AppName:string){App[AppName,table]=App[AppName,table]:add(ROM["Apps",table][AppName,table])}
    function number romCreate(){if(!ROM["Apps",table][ThisApp,table]){ROM["Apps",table][ThisApp,table]=table() return 1} return 0}
    
    function romSaveApp(){romSaveApp(ThisApp)}
    function romLoadApp(){romLoadApp(ThisApp)}
    function romLoadAppVars(){romLoadAppVars(ThisApp)}
    
    function number   romN(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,number]}
    function string   romS(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,string]}
    function vector   romV(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,vector]}
    function vector2 romV2(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,vector2]}
    function vector4 romV4(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,vector4]}
    function array    romR(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,array]}
    function table    romT(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,table]}
    function entity   romE(VarName:string){return ROM["Apps",table][ThisApp,table][VarName,entity]}
    
    function romN(VarName:string,Write)          {ROM["Apps",table][ThisApp,table][VarName,number]=Write}
    function romS(VarName:string,Write:string)   {ROM["Apps",table][ThisApp,table][VarName,string]=Write}
    function romV(VarName:string,Write:vector)   {ROM["Apps",table][ThisApp,table][VarName,vector]=Write}
    function romV2(VarName:string,Write:vector2) {ROM["Apps",table][ThisApp,table][VarName,vector2]=Write}
    function romV4(VarName:string,Write:vector4) {ROM["Apps",table][ThisApp,table][VarName,vector4]=Write}
    function romE(VarName:string,Write:entity)   {ROM["Apps",table][ThisApp,table][VarName,entity]=Write}
    function romR(VarName:string,Write:array)            {ROM["Apps",table][ThisApp,table][VarName,array]=Write}
    function romR(VarName:string,ID,Write)               {ROM["Apps",table][ThisApp,table][VarName,array][ID,number]=Write}
    function romR(VarName:string,ID,Write:string)        {ROM["Apps",table][ThisApp,table][VarName,array][ID,string]=Write}
    function romT(VarName:string,Write:table)            {ROM["Apps",table][ThisApp,table][VarName,table]=Write}
    function romT(VarName:string,ID:string,Write)        {ROM["Apps",table][ThisApp,table][VarName,table][ID,number]=Write}
    function romT(VarName:string,ID:string,Write:string) {ROM["Apps",table][ThisApp,table][VarName,table][ID,string]=Write}
    
    function appToromN(VarName:string) {romN(VarName,appN(VarName))}
    function appToromS(VarName:string) {romS(VarName,appS(VarName))}
    function appToromV(VarName:string) {romV(VarName,appV(VarName))}
    function appToromV2(VarName:string){romV2(VarName,appV2(VarName))}
    function appToromV4(VarName:string){romV4(VarName,appV4(VarName))}
    function appToromE(VarName:string) {romE(VarName,appE(VarName))}
    function appToromR(VarName:string) {romR(VarName,appR(VarName))}
    function appToromT(VarName:string) {romT(VarName,appT(VarName))}
    
    function romToappN(VarName:string) {appN(VarName,romN(VarName))}
    function romToappS(VarName:string) {appS(VarName,romS(VarName))}
    function romToappV(VarName:string) {appV(VarName,romV(VarName))}
    function romToappV2(VarName:string){appV2(VarName,romV2(VarName))}
    function romToappV4(VarName:string){appV4(VarName,romV4(VarName))}
    function romToappE(VarName:string) {appE(VarName,romE(VarName))}
    function romToappR(VarName:string) {appR(VarName,romR(VarName))}
    function romToappT(VarName:string) {appT(VarName,romT(VarName))}
    
    function string sysText(){if(changed(Keyboard)&Keyboard!=13&Keyboard!=154&!inrange(Keyboard,19,20)){if(Keyboard!=127){
        SysText=SysText:sub(1,SysText:length()-SysTextLine)+toChar(Keyboard)+SysText:sub(SysText:length()-SysTextLine+1,SysText:length()) }
        else{SysText=SysText:sub(1,SysText:length()-SysTextLine-1)+SysText:sub(SysText:length()-SysTextLine+1,SysText:length()) }} return SysText}
    
    function string appChat(FunctionName:string){runOnChat(1)
        if(chatClk(find())){WinChat=find():lastSaid():explode(" ") 
            if(WinChat[1,string]=="!win"&WinChat[2,string]==ThisApp&WinChat[3,string]==FunctionName){hideChat(1) return WinChat[4,string]} } return "" }
    
    function string appChat(FunctionName:string){runOnChat(1)
        if(chatClk(find())){WinChat=find():lastSaid():explode(" ") 
            if(WinChat[1,string]=="!win"&WinChat[2,string]==ThisApp&WinChat[3,string]==FunctionName){hideChat(1) return WinChat[4,string]} } return "" }
    
    #Mouse events
    function number appMouse(){return Mouse1&AppPos[ThisApp,number]==1}
    function number click(){return ChangedMouse1&!Mouse1}
    function number appClick(){return ChangedMouse1&!Mouse1&AppPos[ThisApp,number]==1}

    function number fastTap(){if(ChangedMouse1&Mouse1){LongTap=SysTimer} if((SysTimer-LongTap)<7&click()){LongTap=0 return 1} if(!Mouse1){LongTap=0} return 0}
    function number longTap(){if(ChangedMouse1&Mouse1){LongTap=SysTimer} if((SysTimer-LongTap)>7&Mouse1&LongTap) {LongTap=0 return 1} if(!Mouse1){LongTap=0} return 0}

    function number appFastTap(){if(ChangedMouse1&appMouse()){LongTap=AppTimer} if((AppTimer-LongTap)<7&appClick()){LongTap=0 return 1} if(!Mouse1&AppPos[ThisApp,number]==1){LongTap=0} return 0}
    function number appLongTap(){if(ChangedMouse1&appMouse()){LongTap=AppTimer} if((AppTimer-LongTap)>7&appMouse()&LongTap) {LongTap=0 return 1} if(!Mouse1&AppPos[ThisApp,number]==1){LongTap=0} return 0}
    
    function vector2 choiceHelper(Pos:vector2,Step){return floor((CursorPos-Pos)/Step)}
    function vector2 appChoiceHelper(Pos:vector2,Step){return floor((CursorPos-Pos-Screen:egpPos(egp()))/Step)}
    function vector2 choiceHelper(Pos:vector2,Step:vector2){return floor((CursorPos-Pos)/Step)}
    function vector2 appChoiceHelper(Pos:vector2,Step:vector2){return floor((CursorPos-Pos-Screen:egpPos(egp()))/Step)}
    
    #EditText
    function number appEditTextString(EGPID,VarName:string,Pos:vector2,Size){ #Cost 3 egpID.
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos,vec2(Size,15),vec(255))
            appBoxOutline(EGPID+1,EGPID,vec2(),vec2(Size,15),vec())
            appBlackText(EGPID+2,EGPID,appS(VarName):right(Size/textSizeX(10)),vec2(-Size+5,-10)/2,10,0) Screen:egpFont(egp(EGPID+2),"Courier New") }else{
        if(appClick()&egpInrange(egp(EGPID))){SysTextEnable=egp(EGPID)}
        if(changed(SysTextEnable)){SysText="" SysTextLine=0 Screen:egpSetText(egp(EGPID+2),appS(VarName):right(Size/textSizeX(10))) return 1}
        if(SysTextEnable==egp(EGPID)){
            if(changed(Keyboard)){if(Keyboard==19&SysTextLine<SysText:length()){SysTextLine++} if(Keyboard==20&SysTextLine>0){SysTextLine--}}  appS(VarName,sysText())
            if(mod(date()["sec",number],2)){SysTextSymbol="|"}else{SysTextSymbol=" "}
            Screen:egpSetText(egp(EGPID+2),(SysText:sub(1,SysText:length()-SysTextLine)+SysTextSymbol+SysText:sub(SysText:length()-SysTextLine+1,SysText:length())):right(Size/textSizeX(10)) )}
        if(Keyboard==13){Screen:egpSetText(egp(EGPID+2),appS(VarName):right(Size/textSizeX(10))) SysTextEnable=0 return 1}
    } return 0}
    
    function number appEditTextNumber(EGPID,VarName:string,Pos:vector2,Size){ #Cost 3 egpID.
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos,vec2(Size,15),vec(255,255,255))
            appBoxOutline(EGPID+1,EGPID,vec2(),vec2(Size,15),vec())
            appBlackText(EGPID+2,EGPID,appN(VarName):toString():right(Size/textSizeX(10)),vec2(-Size+5,-10)/2,10,0) Screen:egpFont(egp(EGPID+2),"Courier New") }else{
        if(appClick()&egpInrange(egp(EGPID))){SysTextEnable=egp(EGPID)}
        if(changed(SysTextEnable)){SysText="" SysTextLine=0 Screen:egpSetText(egp(EGPID+2),appN(VarName):toString():right(Size/textSizeX(10))) return 1}
        if(SysTextEnable==egp(EGPID)){
            if(changed(Keyboard)){if(Keyboard==19&SysTextLine<SysText:length()){SysTextLine++} if(Keyboard==20&SysTextLine>0){SysTextLine--}} appN(VarName,sysText():toNumber())
            if(mod(date()["sec",number],2)){SysTextSymbol="|"}else{SysTextSymbol=""}
            Screen:egpSetText(egp(EGPID+2),(SysText:sub(1,SysText:length()-SysTextLine)+SysTextSymbol+SysText:sub(SysText:length()-SysTextLine+1,SysText:length())):right(Size/textSizeX(10)) )}
        if(Keyboard==13){Screen:egpSetText(egp(EGPID+2),appN(VarName):toString():right(Size/textSizeX(10))) SysTextEnable=0 return 1}else{return 0}
    } return 0}
    
    #Buttons
    function number appButton(EGPID,Text:string,Pos:vector2,Size:vector2,Color:vector,Event){ #Cost 3 egpID.
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos,Size,vec())
            appBox(EGPID+1,EGPID,vec2(),Size-vec2(Size:y()/10,Size:y()/10),Color)
            appUniText(EGPID+2,EGPID+1,Text,vec2(0,-Size:y()/4),Size:y()/2,1) }else{
        if(egpInrange(egp(EGPID))){Screen:egpColor(egp(EGPID+1),vec(255)-egpUniColor(Color)) return Event}else{Screen:egpColor(egp(EGPID+1),Color)}
    } return 0}
    function number appButtonPress(EGPID,Text:string,Pos:vector2,Size:vector2,Color:vector){return appButton(EGPID,Text,Pos,Size,Color,appMouse())} #Cost 3 egpID.
    function number appButtonPress(EGPID,Text:string,Pos:vector2,Size:vector2){return appButtonPress(EGPID,Text,Pos,Size,ROM["System",table]["Theme",vector])} #Cost 3 egpID.    
    function number appButton(EGPID,Text:string,Pos:vector2,Size:vector2,Color:vector){return appButton(EGPID,Text,Pos,Size,Color,appClick())} #Cost 3 egpID.
    function number appButton(EGPID,Text:string,Pos:vector2,Size:vector2){return appButton(EGPID,Text,Pos,Size,ROM["System",table]["Theme",vector])} #Cost 3 egpID.
    function number appButtonToggle(EGPID,VarName:string,Pos:vector2,Size:vector2,Color:vector,Text:array){ #Cost 3 egpID.
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos,Size,vec())
            appBox(EGPID+1,EGPID,vec2(),Size-vec2(Size:y()/10,Size:y()/10),Color)
            appUniText(EGPID+2,EGPID+1,Text[appN(VarName)+1,string],vec2(0,-Size:y()/4),Size:y()/2,1) }else{
        if(egpInrange(egp(EGPID))){
            Screen:egpColor(egp(EGPID+1),vec(255)-egpUniColor(Color)) 
            if(appClick()){appN(VarName,!appN(VarName)) Screen:egpSetText(egp(EGPID+2),Text[appN(VarName)+1,string]) return 1} }
        else{Screen:egpColor(egp(EGPID+1),Color)}
    } return 0}
    
    function number appButtonToggle(EGPID,VarName:string,Pos:vector2,Size:vector2,Text:array){return appButtonToggle(EGPID,VarName,Pos,Size,ROM["System",table]["Theme",vector],Text)} #Cost 3 egpID.
    
    function number appCheckBox(EGPID,VarName:string,Text:string,Pos:vector2){ #Cost 4 egpID
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos+vec2(8),vec2(16),vec(255))
            appBoxOutline(EGPID+1,EGPID,vec2(),vec2(16),vec())
            appUniText(EGPID+2,Text,Pos+vec2(20,3))
            Screen:egpLineStrip(egp(EGPID+3),array(vec2(-6,0),vec2(0,6),vec2(9,-10))) Screen:egpColor(egp(EGPID+3),vec4(128,255,0,255*appN(VarName))) Screen:egpParent(egp(EGPID+3),egp(EGPID)) Screen:egpSize(egp(EGPID+3),3) }else{
        if(egpInrange(egp(EGPID))){Screen:egpColor(egp(EGPID),vec(200)) if(appClick()){appN(VarName,!appN(VarName)) return 1}}else{Screen:egpColor(egp(EGPID),vec(255))}
        if(changed(appN(VarName))){Screen:egpColor(egp(EGPID+3),vec4(128,255,0,255*appN(VarName)))}}
        return 0}
    
    function number appChoiceMenu(EGPID,Pos:vector2,Color:vector,VarName:string,ChooseText:array){ #Cost 3 egpID.
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos+vec2(40,7.5+appN(VarName+"List")*15),vec2(80,15),Color)
            ChooseText1=ChooseText2=array()
            for(I=1,ChooseText:count()){if(mod(I,2)){ChooseText1=ChooseText1:add(array(ChooseText[I,string]))}else{ChooseText2=ChooseText2:add(array(ChooseText[I,string]))}}
            appUniText(EGPID+1,ChooseText1:concat("\n\n\n"):explode("\n"),Pos+vec2(3,2.5),10)
            appUniText(EGPID+2,ChooseText2:concat("\n\n\n"):explode("\n"),Pos+vec2(3,17.5),10) 
            if(!appN(VarName+"List")&appS(VarName)!=ChooseText[appN(VarName+"List"),string]){for(I=1,ChooseText:count()){if(ChooseText[I,string]==appS(VarName)){I=appN(VarName+"List") break}}}
            if(!appS(VarName)){appS(VarName,ChooseText[appN(VarName+"List")+1,string])} return 1 }else{
        if(appMouse()&egpAppInrange(Pos,Pos+vec2(80,ChooseText:count()*15))){
            appN(VarName+"List",appChoiceHelper(Pos,15):y())
            Screen:egpPos(egp(EGPID),Pos+vec2(40,7.5+appN(VarName+"List")*15)) 
            appS(VarName,ChooseText[appN(VarName+"List")+1,string])
            return changed(appN(VarName+"List")) } } return 0}
    
    function number appChoiceMenu(EGPID,Pos:vector2,VarName:string,ChooseText:array){return appChoiceMenu(EGPID,Pos,ROM["System",table]["Theme",vector],VarName,ChooseText)} #Cost 3 egpID.
    
    function number appContextMenu(VarName:string,Reason,Chooses:array){ #Cost 0 egpID
        EGPCTM=AppEGPID["FreeEGP",array][1,vector2][2]
        EGPCTMSize=vec2(80,Chooses:count()*10)
        if(Reason&!Screen:egpHasObject(EGPCTM)){
            Screen:egpBox(EGPCTM,CursorPos+vec2(3)+EGPCTMSize/2,EGPCTMSize) Screen:egpColor(EGPCTM,vec(200))
            egpAdvBox(EGPCTM-1,EGPCTM,vec2(),vec2(80,10),ROM["System",table]["Theme",vector])
            egpBlackText(EGPCTM-2,EGPCTM,Chooses,vec2(3,0)-EGPCTMSize/2,10)
            timer("CloseCTM",5000)}else{
        if(inrange(CursorPos,Screen:egpPos(EGPCTM)-EGPCTMSize/2,Screen:egpPos(EGPCTM)+EGPCTMSize/2)){
            Screen:egpPos(EGPCTM-1,vec2(0,choiceHelper(Screen:egpPos(EGPCTM)-EGPCTMSize/2,10):y()*10-EGPCTMSize:y()/2+5)) Screen:egpAlpha(EGPCTM-1,255)
            if(click()){appN(VarName,choiceHelper(Screen:egpPos(EGPCTM)-EGPCTMSize/2,10):y()+1) for(I=EGPCTM-Chooses:count()-2,EGPCTM){Screen:egpRemove(I)} return 1}
        }else{Screen:egpAlpha(EGPCTM-1,0)}
        if(click()){for(I=EGPCTM-Chooses:count()-2,EGPCTM){Screen:egpRemove(I)}} }
    return Screen:egpHasObject(EGPCTM) }
    
    function array  array:shortArray(Size){Resuilt=array() for(J=1,This:count()){for(I=1,int(This[J,string]:length()/Size+1)){Resuilt=Resuilt:add(array(This[J,string]:sub(1+Size*(I-1),Size*I)))} } return Resuilt}
    function array string:shortArray(Size){Resuilt=array() for(I=1,int(This:length()/Size+1)){Resuilt=Resuilt:add(array(This:sub(1+Size*(I-1),Size*I)))} return Resuilt}
    
    function array  array:cutArray(Size){Resuilt=array() for(I=1,This:count()){Resuilt[I,string]=This[I,string]:left(Size)} return Resuilt}
    
    function number appScroller(EGPID,VarName:string,Pos:vector2,Size:vector2,ArraySize,SymbolSize){ #Cost 2 egpID
        if(Size:y()<Size:x()){
            if(!Screen:egpHasObject(egp(EGPID))){
                appBox(EGPID,Pos,Size,vec(150)) Screen:egpAlpha(egp(EGPID),150)
                appBox(EGPID+1,EGPID,vec2(-Size:y()/2+10,0),vec2(20,Size:y()),vec(150))}else{
            if(appMouse()&egpInrange(egp(EGPID))){ SizeScroll=Size-vec2(10,0)
                if(egpAppInrange(Pos-Size/2+vec2(10,0),Pos+Size/2-vec2(10,0))){
                    Screen:egpPos(egp(EGPID+1),vec2((CursorPos-Screen:egpPos(egp())-Pos+Size/2-vec2(Size:x()/2,0)):x(),0))
                    appN(VarName,(SizeScroll:x()/10<ArraySize)*floor((CursorPos-Pos+SizeScroll/2-Screen:egpPos(egp()))/SizeScroll*(ArraySize-SizeScroll:x()/SymbolSize)):x()) }
                if(egpAppInrange(Pos-Size/2,Pos-Size/2+vec2(10))){Screen:egpPos(egp(EGPID+1),vec2(-Size:x()/2+10,0)) appN(VarName,0)}
                if(egpAppInrange(Pos+Size/2-vec2(10),Pos+Size/2)&ArraySize>Size:x()/SymbolSize){Screen:egpPos(egp(EGPID+1),vec2( Size:x()/2-10,0)) appN(VarName,ArraySize-Size:x()/SymbolSize)}
            return changed(appN(VarName))} }}
        else{
            if(!Screen:egpHasObject(egp(EGPID))){
                appBox(EGPID,Pos,Size,vec(150)) Screen:egpAlpha(egp(EGPID),150)
                appBox(EGPID+1,EGPID,vec2(0,-Size:y()/2+10),vec2(Size:x(),20),vec(150))}else{
            if(appMouse()&egpInrange(egp(EGPID))){ SizeScroll=Size-vec2(0,10)
                if(egpAppInrange(Pos-Size/2+vec2(0,10),Pos+Size/2-vec2(0,10))){
                    Screen:egpPos(egp(EGPID+1),vec2(0,(CursorPos-Screen:egpPos(egp())-Pos+Size/2-vec2(0,Size:y()/2)):y()))
                    appN(VarName,(SizeScroll:y()/SymbolSize<ArraySize)*floor((CursorPos-Pos+SizeScroll/2-Screen:egpPos(egp()))/SizeScroll*(ArraySize-SizeScroll:y()/SymbolSize)):y()) }
                if(egpAppInrange(Pos-Size/2,Pos-Size/2+vec2(10))){Screen:egpPos(egp(EGPID+1),vec2(0,-Size:y()/2+10)) appN(VarName,0)}
                if(egpAppInrange(Pos+Size/2-vec2(10),Pos+Size/2)&ArraySize>Size:x()/SymbolSize){Screen:egpPos(egp(EGPID+1),vec2(0, Size:y()/2-10)) appN(VarName,ArraySize-Size:y()/SymbolSize)}
            return changed(appN(VarName))} }}
    return 0}
    
    function appArrayField(EGPID,VarName:string,Pos:vector2,Size:vector2,Array:array){ #Cost 5 egpID
        if(!Screen:egpHasObject(egp(EGPID))){ # 1 tick of rendering
            appBox(EGPID,Pos,Size,vec(255))
            appBoxOutline(EGPID+1,EGPID,vec2(),Size,vec())
            appBlackText(EGPID+4,Array:concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):explode("\n"),vec2(2,0)-Size/2+Pos,10) Screen:egpFont(egp(EGPID+4),"Courier New") Screen:egpSize(egp(EGPID+4),vec2(Resolution:x(),Size:y())) }else{
        if(appScroller(EGPID+2,VarName+"List",Pos+vec2(Size:x()/2-5,0),vec2(10,Size:y()),Array:count(),10)){Screen:egpSetText(egp(EGPID+4),Array:concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil",""))}
        if(Update==(ThisApp+" "+VarName)){Screen:egpSetText(egp(EGPID+4),Array:concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil","")) Update=""}
    }}
    
    function appArrayFieldShort(EGPID,VarName:string,Pos:vector2,Size:vector2,Array:array){ #Cost 5 egpID
        if(!Screen:egpHasObject(egp(EGPID))){ # 1 tick of rendering
            appBox(EGPID,Pos,Size,vec(255)) }else{
        if(!Screen:egpHasObject(egp(EGPID+1))){ # 2 tick of rendering
            appR(VarName+"Array",Array:shortArray(Size:x()/textSizeX(10)))
            appBoxOutline(EGPID+1,EGPID,vec2(),Size,vec())
            appBlackText(EGPID+4,appR(VarName+"Array"):concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):explode("\n"),vec2(2,0)-Size/2+Pos,10) Screen:egpFont(egp(EGPID+4),"Courier New") Screen:egpSize(egp(EGPID+4),vec2(Resolution:x(),Size:y())) }else{
        if(appScroller(EGPID+2,VarName+"List",Pos+vec2(Size:x()/2-5,0),vec2(10,Size:y()),appR(VarName+"Array"):count(),10)){Screen:egpSetText(egp(EGPID+4),appR(VarName+"Array"):concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil",""))}
        if(Update==(ThisApp+" "+VarName)){appR(VarName+"Array",Array:shortArray(Size:x()/textSizeX(10))) Screen:egpSetText(egp(EGPID+4),appR(VarName+"Array"):concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil","")) Update="" }
    }}}
    
    function appArrayFieldCut(EGPID,VarName:string,Pos:vector2,Size:vector2,Array:array){ #Cost 5 egpID
        if(!Screen:egpHasObject(egp(EGPID))){ # 1 tick of rendering
            appBox(EGPID,Pos,Size,vec(255)) }else{
        if(!Screen:egpHasObject(egp(EGPID+1))){ # 2 tick of rendering
            appR(VarName+"Array",Array:cutArray(Size:x()/textSizeX(10)))
            appBoxOutline(EGPID+1,EGPID,vec2(),Size,vec())
            appBlackText(EGPID+4,appR(VarName+"Array"):concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):explode("\n"),vec2(2,0)-Size/2+Pos,10) Screen:egpFont(egp(EGPID+4),"Courier New") Screen:egpSize(egp(EGPID+4),vec2(Resolution:x(),Size:y())) }else{
        if(appScroller(EGPID+2,VarName+"List",Pos+vec2(Size:x()/2-5,0),vec2(10,Size:y()),appR(VarName+"Array"):count(),10)){Screen:egpSetText(egp(EGPID+4),appR(VarName+"Array"):concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil",""))}
        if(Update==(ThisApp+" "+VarName)){appR(VarName+"Array",Array:cutArray(Size:x()/textSizeX(10))) Screen:egpSetText(egp(EGPID+4),appR(VarName+"Array"):concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil","")) Update="" }
    }}}
    
    function appArrayFieldUse(EGPID,VarName:string,Pos:vector2,Size:vector2,Array:array){ #Cost 6 egpID
        if(!Screen:egpHasObject(egp(EGPID))){
            appBox(EGPID,Pos,Size,vec(255))
            appBox(EGPID+5,Pos+vec2(-5,10*(appN(VarName)-appN(VarName+"List"))-40),vec2(Size:x()-10,10),ROM["System",table]["Theme",vector]) Screen:egpAlpha(egp(EGPID+5),0)
            appBoxOutline(EGPID+1,EGPID,vec2(),Size,vec())
            appBlackText(EGPID+4,Array:concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil",""):explode("\n"),vec2(2,0)-Size/2+Pos,10) Screen:egpFont(egp(EGPID+4),"Courier New") Screen:egpSize(egp(EGPID+4),vec2(Resolution:x(),Size:y())) }else{
        if(appScroller(EGPID+2,VarName+"List",Pos+vec2(Size:x()/2-5,0),vec2(10,Size:y()),Array:count(),10)){
            Screen:egpSetText(egp(EGPID+4),Array:concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil",""))
            if(inrange((appN(VarName)-int(appN(VarName+"List"))),1,Size:y()/10)){Screen:egpPos(egp(EGPID+5),Pos+vec2(-5,10*(appN(VarName)-int(appN(VarName+"List")))-Size:y()/2-5))} }
        if(appMouse()&!appN(VarName+"Ignore")&egpAppInrange(-Size/2+Pos,vec2(-10,0)+Size/2+Pos)){
                appN(VarName,appChoiceHelper(Pos-Size/2,10):y()+1+appN(VarName+"List"))
                Screen:egpPos(egp(EGPID+5),Pos+vec2(-5,10*(appN(VarName)-appN(VarName+"List"))-Size:y()/2-5)) Screen:egpAlpha(egp(EGPID+5),255) }
        if(Update==(ThisApp+" "+VarName)){Screen:egpSetText(egp(EGPID+4),Array:concat("\n",appN(VarName+"List")+1,appN(VarName+"List")+Size:y()/10):replace("nil","")) Update=""}
    }}
    
    function appArrayFieldUseCTM(EGPID,VarName:string,Pos:vector2,Size:vector2,Array:array,ContextMenu:array){ #Cost 6 egpID
        appArrayFieldUse(EGPID,VarName,Pos,Size,Array)
        if(appContextMenu(VarName+"Action",appClick()&egpAppInrange(-Size/2+Pos,vec2(-10,0)+Size/2+Pos),ContextMenu)){appN(VarName+"Ignore",1)}
        elseif(appN(VarName+"Ignore")){appN(VarName+"Ignore",0)} }
    
    function number appSliderStatic(EGPID,VarName:string,Pos:vector2,Size,Min,Max){ #Cost 3 egpID
        if(!Screen:egpHasObject(egp(EGPID))){
            Screen:egpLine(egp(EGPID),Pos,Pos+vec2(Size,0)) Screen:egpColor(egp(EGPID),egpUniColor(egp())) Screen:egpSize(egp(EGPID),3) Screen:egpParent(egp(EGPID),egp())
            appBox(EGPID+1,Pos+vec2((appN(VarName)-Min)*Size/(Max-Min),0),vec2(6,8),ROM["System",table]["Theme",vector])
            appUniText(EGPID+2,appN(VarName):toString(),Pos+vec2(Size+4,-6),8) }else{
        if(appMouse()&egpAppInrange(Pos-vec2(0,4),Pos+vec2(Size,4))){
            appN(VarName,int((CursorPos-Screen:egpPos(egp())-Pos):x()*(Max-Min)/Size+Min))
            Screen:egpPos(egp(EGPID+1),Pos+vec2((appN(VarName)-Min)*Size/(Max-Min),0))
            Screen:egpSetText(egp(EGPID+2),appN(VarName):toString()) return 1}} return 0}
    
    function number appSliderDynamic(EGPID,VarName:string,Pos:vector2,Size,Min,Max){
        Screen:egpPos(egp(EGPID+1),Pos+vec2((appN(VarName)-Min)*Size/(Max-Min),0))
        Screen:egpSetText(egp(EGPID+2),appN(VarName):toString())
        return appSliderStatic(EGPID,VarName,Pos,Size,Min,Max) } #Cost 3 egpID
    
    #Activity
    function number activityManager(VarName:string,EGPIDStart,EGPIDEnd){
        if(!Screen:egpHasObject(egp(EGPIDStart))){appN(VarName+"Update",1)} 
        if(appS(VarName+"Changed")!=appS(VarName)){for(I=egp(EGPIDStart),egp(EGPIDEnd)){Screen:egpRemove(I)} appN(VarName+"Update",1) appS(VarName+"Changed",appS(VarName)) return 0}
        return 1}
    function number activityManager(EGPIDStart,EGPIDEnd){return activityManager("Activity",EGPIDStart,EGPIDEnd)}
    function number activityManager(EGPIDStart){return activityManager("Activity",EGPIDStart,AppEGPID[ThisApp,vector2]:y())}
    
    function number activity(VarName:string,Name:string){return Name==appS(VarName)&appS(VarName+"Changed")==appS(VarName)}
    function number activity(Name:string){return activity("Activity",Name)}
    
    function number activityStart(VarName:string){if(appN(VarName+"Update")){appN(VarName+"Update",0) return 1} return 0}
    function number activityStart(){return activityStart("Activity")}
    
    #App functions
    function number sysTimer(Latency){SysTimerNum++ return !mod(SysTimer+SysTimerNum,int(Latency/NowPower))}
    function number appTimer(Latency){AppTimerNum++ return !mod(AppTimer+AppTimerNum,int(Latency/100))}
    
    function callAppPlus(Number){AppPosKeys=AppPos:keys() for(I=1,AppPos:count()){AppPos[AppPosKeys[I,string],number]=AppPos[AppPosKeys[I,string],number]+Number}}
    function callAppPosPlus(AppName:string,Number){AppPosFlip=AppPos:flip() for(I=1,AppPos[AppName,number]-1){AppPos[AppPosFlip[I,string],number]=AppPos[AppPosFlip[I,string],number]+1}}
    function callAppPosMinus(AppName:string,Number){AppPosFlip=AppPos:flip() for(I=AppPos[AppName,number]+1,AppPos:count()){AppPos[AppPosFlip[I,string],number]=AppPos[AppPosFlip[I,string],number]-1}}
            
    function callApp(AppName:string){
        AppPosFlip=AppPos:flip()
        callAppPosPlus(AppName,1)
        AppPos[AppName,number]=1
        CallAppEvent=AppName }

    function appLaunch(AppName:string){if(!App[AppName,table]){
        AppLaunch=AppName
        App[AppName,table]=table()
        glbV2(AppName,"Pos",Resolution/2)
        #App pos
        callAppPlus(1)
        AppPos[AppName,number]=1}elseif(AppPos[AppName,number]>1){callApp(AppName)}}
    
    function number appStart(AppName:string,Size:vector2,Color:vector,EGPCount){
        if(!ROM["System",table]["AllApps",table][AppName,vector]){ROM["System",table]["AllApps",table][AppName,vector]=Color}
        if(App[AppName,table]){
        if(AppLaunch==AppName){
            for(I=2,AppEGPID["FreeEGP",array]:count()){ if(AppEGPID["FreeEGP",array][I,vector2]:y()>=EGPCount){
                AppEGPID[AppName,vector2]=vec2(AppEGPID["FreeEGP",array][I,vector2]:x(),EGPCount)
                AppEGPID["FreeEGP",array][I,vector2]=vec2(AppEGPID[AppName,vector2]:x()+EGPCount,AppEGPID["FreeEGP",array][I,vector2]:y()-EGPCount)
                if(AppEGPID["FreeEGP",array][I,vector2]:y()==0){AppEGPID["FreeEGP",array]:remove(I)}
                NoNewMemory=1 break } }
            if(!NoNewMemory){
                AppEGPID[AppName,vector2]=vec2(AppEGPID["FreeEGP",array][1,vector2]:x(),EGPCount)
                AppEGPID["FreeEGP",array][1,vector2][1]=AppEGPID["FreeEGP",array][1,vector2]:x()+EGPCount+5 }
            appV2("WinMovePos",vec2(0,Size:y()/2-7))
        AppCreate=AppLaunch AppLaunch=""}
        ThisApp=AppName #AppEGPID[ThisApp,vector2][2]=EGPCount
        #Draw window
        EGPPos=Screen:egpPos(egp())
        if(!Screen:egpHasObject(egp())){
            Screen:egpBox(egp(),appV2("Pos"),Size) Screen:egpColor(egp(),Color)
            appUniText(-1,AppName,vec2(0,-Size:y()/2+1),10,1)
            appBox(-2,vec2(Size:x()/2-7,-Size:y()/2+7),vec2(14,14),vec(255,0,0)) 
            Screen:egpLineStrip(egp(-3),array(vec2(-4,-4),vec2(4,4),vec2(),vec2(4,-4),vec2(-4,4))) Screen:egpParent(egp(-3),egp(-2)) Screen:egpColor(egp(-3),egpUniColor(egp()))
            appBoxOutline(-4,vec2(),Size+Resolution/256,vec())
            AppGraphics=AppName }else{
        #Inrange window
        AppPosFlip=AppPos:flip()
        App[ThisApp,table]["Inrange",number]=inrange(CursorPos,EGPPos-Size/2,EGPPos+Size/2)
        if(Mouse1&App[ThisApp,table]["Inrange",number]&!App[AppPosFlip[1,string],table]["Inrange",number]){
            if(AppPos[ThisApp,number]==2){callApp(ThisApp)}
            if(AppPos[ThisApp,number]==3&!App[AppPosFlip[2,string],table]["Inrange",number]){callApp(ThisApp)} }
        #WinClose animation
        if(egpInrange(egp(-2))){Screen:egpAlpha(egp(-2),255) if(appClick()){AppClose=ThisApp}}else{Screen:egpAlpha(egp(-2),0)}
        #Move window
        WinMoveInrange=inrange(CursorPos,EGPPos-Size/2,EGPPos+vec2(Size:x()/2-15,-Size:y()/2+15))
        if(ChangedMouse1&appMouse()&WinMoveInrange){appV2("WinMovePos",EGPPos-CursorPos)}
        if(appMouse()&(AppMove==ThisApp|WinMoveInrange)){
            Power=25 AppMove=ThisApp appN("Inrange",1) Screen:egpPos(egp(),appV2("WinMovePos")+CursorPos) }
        if(AppMove==ThisApp&!Mouse1){appV2("WinMovePos",vec2(0,Size:y()/2-7)) appV2("Pos",EGPPos) AppMove=""}}
    return (NowPower>=100|sysTimer(100)) }
    return 0 }
    
    function number appEnd(){
        EGPCount=AppEGPID[ThisApp,vector2]:y()
        EGPIDPos=AppEGPID[ThisApp,vector2]:x()
        #close window
        if(AppClose==ThisApp){
            SysTextEnable=0
            for(I=egp(-4),egp(EGPCount)){Screen:egpRemove(I)}
            if(EGPIDPos+EGPCount+1==AppEGPID["FreeEGP",array][1,vector2]:x()){AppEGPID["FreeEGP",array][1,vector2][1]=EGPIDPos}
            else{AppEGPID["FreeEGP",array]=AppEGPID["FreeEGP",array]:add(array(AppEGPID[ThisApp,vector2]))}
             callAppPosMinus(ThisApp,-1) App:remove(ThisApp) AppPos:remove(ThisApp) AppEGPID:remove(ThisApp)
            if(App:count()==0){AppEGPID["FreeEGP",array]=array(vec2(5+(StartEGPID-1)*ROM["System",table]["FullLoad",number],egpMaxObjects()))}
            AppClose="" ThisApp="" return 1}
        #update window
        if(CallAppEvent==ThisApp){for(I=egp(-4),egp(EGPCount)){Screen:egpRemove(I)} CallAppEvent="" #Screen:egpOrder(I,Screen:egpNumObjects())
        #EGP memory
        for(I=2,AppEGPID["FreeEGP",array]:count()){
            if(AppEGPID[ThisApp,vector2]&AppEGPID["FreeEGP",array][I,vector2]:y()>=EGPCount){
                AppEGPID[ThisApp,vector2][1]=AppEGPID["FreeEGP",array][I,vector2]:x() 
                AppEGPID["FreeEGP",array][I,vector2]=vec2(EGPIDPos+EGPCount,AppEGPID["FreeEGP",array][I,vector2]:y()-EGPCount)
                if(AppEGPID["FreeEGP",array][I,vector2]:y()==0){AppEGPID["FreeEGP",array]:remove(I)} break } } }
    ThisApp="" return 0 }
    function number appEndSave(){if(AppClose==ThisApp){romSaveApp(ThisApp)} return appEnd()}
    
    function number appCreate(){if(AppCreate==ThisApp){AppCreate="" return 1} return 0}
    
    function number appGraphics(){if(AppGraphics==ThisApp){AppGraphics="" return 1} return 0}
    
    function number dialogApp(Name:string,Type:string,Size,Text:string){if(DialogApp==Name){
        if(!Mouse1&!App["DialogApp",table]){appLaunch("DialogApp")
            if(appV2("Pos")!=vec2()){glbV2("DialogApp","Pos",appV2("Pos"))}
            glbS("DialogApp","Text",Text)
            glbS("DialogApp","Type",Type)
            glbN("DialogApp","TextSize",Size)
            if(Type=="BigNotify"){glbV2("DialogApp","AddSize",vec2(0,Text:explode("\n"):shortArray(240/textSizeX(Size)):count()*Size-35))}
            if(Type=="FieldNotify"){glbV2("DialogApp","AddSize",vec2(-50,Size))} }
        if(glbN("DialogApp","Answear")){AppClose="DialogApp" return 1}} return 0}
    
    function startMenuIcon(Number){StartMenuAppName=ROM["Apps",table]["StartMenu",table]["IconList",array][Number,string]
            if(egpUniColor(ROM["System",table]["AllApps",table][StartMenuAppName,vector])==vec()){StartMenuIconColor=ROM["System",table]["AllApps",table][StartMenuAppName,vector]*0.8}else{StartMenuIconColor=ROM["System",table]["AllApps",table][StartMenuAppName,vector]}
            appBox(9+Number*3,vec2(-1,-appV2("Size"):y()/2+23)+vec2(40*mod(Number-1,3),40*floor((Number-1)/3)),vec2(38),StartMenuIconColor) 
            egpWhiteText(egp(10+Number*3),egp(9+Number*3),StartMenuAppName[1],vec2(0,-20),25,1)
            egpWhiteText(egp(11+Number*3),egp(9+Number*3),StartMenuAppName:sub(1,6)+"\n"+StartMenuAppName:sub(7,13),vec2(-19,2),6,vec2(38,20),1)
            if(StartMenuAppName:length()<7){Screen:egpPos(egp(11+Number*3),vec2(-19,5)) } }
    
    #System
    function vector2 autoResolution(){
        ScreenSize=Screen:entity():aabbSize()
        if(ScreenSize:y()>ScreenSize:x()){
            AutoResolution=vec2(512,int((ScreenSize:x()/ScreenSize:y())*512))
            if(AutoResolution:y()<200){AutoResolution[2]=int((ScreenSize:z()/ScreenSize:y())*512)} }
        if(ScreenSize:y()<ScreenSize:x()){AutoResolution=vec2(512,int((ScreenSize:y()/ScreenSize:x())*512))}
        if(ScreenSize:y()==ScreenSize:x()){AutoResolution=vec2(512)}
    return AutoResolution}
    
    function runSystem(EGPIDofApps){SystemOn=1 AppEGPID["FreeEGP",array]=array(vec2(EGPIDofApps+4,egpMaxObjects())) }
    
    findIncludeClass("player")
    
    StartEGPID=11
    FirstFile="Windows10/Win"+entity():id():toString()+".txt"
    fileLoad(FirstFile)
    
    #Windows logo
    Resolution=autoResolution()
    Screen:egpClear()
    Screen:egpBox(1,Resolution/2,Resolution) Screen:egpColor(1,vec())
    Screen:egpPoly(2,array(vec2(-40,32),vec2(-40,-32),vec2(46,-44),vec2(46,44))) Screen:egpColor(2,vec(0,220,255))
    Screen:egpBox(3,vec2(),vec2(100,4)) Screen:egpColor(3,vec())
    Screen:egpBox(4,vec2(),vec2(4,100)) Screen:egpColor(4,vec())
    for(I=2,5){Screen:egpParent(I,1)}
    
    Screen:egpResolution(vec2(),Resolution) #Set resolution
    
    timer("FileReadError",5000) #Error notification
}

if(changed(SystemOn)&!first()){Screen:egpClear()}
if(!SystemOn){#System Off
    if(find():keyUse()&find():aimEntity()==Screen:entity()){reset()} #Wake up system
    
    timer("1",1000) if(clk("1")|first()){#find user
        if(!ROM["System",table]["Control",number]){findInSphere(entity():pos(),70) findSortByDistance(entity():pos()) }
        else{findInSphere(Screen:entity():pos(),70) findSortByDistance(Screen:entity():pos()) } }
    
    #File Read Error
    if(clk("FileReadError")&Screen){DialogApp="FileReadError" runSystem(1) ROM["System",table]=table() ROM["System",table]["Theme",vector]=vec(150)}
    
    if(changed(Screen)){reset()}
    
    #Load ROM data
    runOnFile(1)
    if(fileClk()&Screen){
        ROM=vonDecodeTable(fileRead())
                
        #Set default ROM
        if(ROM["Version",string]!="2.1"){
            #Standart values
            ROM["System",table]=table()
                ROM["System",table]["Resolution",vector2]=Resolution
                ROM["System",table]["Wallpaper",vector]=floor(randvec(0,255))
                ROM["System",table]["Theme",vector]=vec(150)
                ROM["System",table]["FullLoad",number]=FullLoad=1
                ROM["System",table]["Control",number]=1
                ROM["System",table]["AllApps",table]=table()
            ROM["Version",string]="2.1"
            ROM["Apps",table]=table()
                ROM["Apps",table]["StartMenu",table]=table()
                ROM["Apps",table]["StartMenu",table]["LastApps",array]=array("Settings","Diagrams","TaskM","Calculator","Clicker")
                ROM["Apps",table]["StartMenu",table]["IconList",array]=array("Diagrams","TaskM","Calculator","Clicker")
            romWrite()
            runSystem(StartEGPID) appLaunch("Settings") glbS("Settings","Activity","Other") }
        else{
        #Set saved resolution
            Resolution=ROM["System",table]["Resolution",vector2]
            if(Resolution:x()<300|Resolution:y()<150){Resolution=autoResolution()}
            FullLoad=ROM["System",table]["FullLoad",number]
            ROM["System",table]["AllApps",table]=table()
            if(ROM["System",table]["FullLoad",number]){#FullLoad
                runSystem(StartEGPID)}
            else{runSystem(1) #NoFullLoad
                print("Now you entered in NoFullLoad mode. ThisApp is just a system without Start menu. Here you have more EGP memory. You can make your start menu, fullscreen app or somethink same.") 
                appLaunch("TaskM") } }
        
        #Set resolution
        Screen:egpResolution(vec2(),Resolution)
        stoptimer("FileReadError")} }

else{#System On
NowPower=Power interval(Power) Power=100 SysTimerNum=AppTimerNum=0 SysTimer++ AppTimer+=!mod(SysTimer,int(100/NowPower))
CursorPos=Screen:egpCursor(find())
if(!find():inVehicle()){Mouse1=find():keyUse()|find():keyPressed("e")}else{Mouse1=find():keyAttack1()} ChangedMouse1=changed(Mouse1)

if(appTimer(1000)){#Find user
    if(!ROM["System",table]["Control",number]){findInSphere(entity():pos(),70) findSortByDistance(entity():pos()) }
    else{findInSphere(Screen:entity():pos(),70) findSortByDistance(Screen:entity():pos()) } }

if(FullLoad){
    if(!Screen:egpHasObject(1)){
        Screen:egpBox(1,Resolution/2,Resolution) Screen:egpColor(1,ROM["System",table]["Wallpaper",vector]) #Wallpaper
        Screen:egpBox(2,vec2(),vec2()) Screen:egpAlpha(2,0) #Wallpaper
        Screen:egpBox(3,vec2(Resolution:x()/2,Resolution:y()-8),vec2(Resolution:x(),16)) Screen:egpColor(3,vec4(vec(20),220)) #Task bar
        #Time and Battery level
        egpWhiteText(9,3,date()["hour",number]:toString()+":"+date()["min",number]:toString(),vec2(Resolution:x()/2-5,-5),10,2) Screen:egpFont(9,"Courier New")
        egpWhiteText(10,3,"",vec2(-Resolution:x()/2+18,-5),10) Screen:egpFont(10,"Courier New")
        #StartMenu button
        Screen:egpBox(4,vec2(8,Resolution:y()-8),vec2(16,16))
        for(I=5,8){Screen:egpBox(I,vec2(),vec2(6,6)) Screen:egpParent(I,4)}
            Screen:egpPos(5,vec2(-4,-4))
            Screen:egpPos(6,vec2(-4, 3))
            Screen:egpPos(7,vec2( 3,-4))
            Screen:egpPos(8,vec2( 3, 3)) }else{
    
    if(appTimer(1000)){
        if(changed(Screen:entity():getColor())&AppTimer>20){ROM["System",table]["Wallpaper",vector]=Screen:entity():getColor() romWrite()}
        if(AppEGPID["FreeEGP",array][1,vector2]:x()>AppEGPID["FreeEGP",array][1,vector2]:y()-50){print("You have less than 50 EGP ID!")}
        Screen:egpColor(1,ROM["System",table]["Wallpaper",vector]) #Wallpaper color
        Screen:egpSetText(9,date()["hour",number]:toString()+":"+date()["min",number]:toString()) #Time
        Screen:egpSetText(10,AppPos:keys():concat(" ")) } #Apps list
    
    AppListInrange=inrange(CursorPos,vec2(16,Resolution:y()-16),Resolution-vec2(50,0))
    if(changed(AppListInrange)){Screen:egpAlpha(2,50*AppListInrange) if(!AppListInrange){Screen:egpSize(2,vec2())}}
    if(AppListInrange){AppListLength=0 for(I=1,AppPos:count()){ AppListSize=AppPos:keys()[I,string]:length()*textSizeX(10)
        if(inrange(CursorPos,vec2(AppListLength+16,Resolution:y()-16),vec2(AppListLength+AppListSize,Resolution:y()))){
        Screen:egpBox(2,vec2(AppListLength+AppListSize/2+16,Resolution:y()-8),vec2(AppListSize,16))
        if(click()){callApp(AppPos:keys()[I,string]) Screen:egpSetText(10,AppPos:keys():concat(" ")) break} }
        AppListLength+=AppListSize+textSizeX(10) } }
    
    #StartMenu
    StarnMenuIconInrange=inrange(CursorPos,vec2(0,Resolution:y()-16),vec2(16,Resolution:y()))
    if(changed(StarnMenuIconInrange)){Screen:egpAlpha(4,255*StarnMenuIconInrange) for(I=5,8){Screen:egpColor(I,ROM["System",table]["Theme",vector]*StarnMenuIconInrange+vec(255))} }
    if(StarnMenuIconInrange&click()&!glbN("StartMenu","Active")){appLaunch("StartMenu")}
    }
    
    
    if(App["StartMenu",table]){ThisApp="StartMenu"
        #Make EGP memory
        if(AppLaunch==ThisApp){appN("EGPCount",11+romR("IconList"):count()*3) appN("Active",1) appN("Pos",20) appV2("Size",vec2(200,130+40*(romR("IconList"):count()>9)))
            for(I=2,AppEGPID["FreeEGP",array]:count()){ if(AppEGPID["FreeEGP",array][I,vector2]:y()>=appN("EGPCount")){
                AppEGPID[ThisApp,vector2]=vec2(AppEGPID["FreeEGP",array][I,vector2]:x(),appN("EGPCount"))
                AppEGPID["FreeEGP",array][I,vector2]=vec2(AppEGPID[ThisApp,vector2]:x()+appN("EGPCount"),AppEGPID["FreeEGP",array][I,vector2]:y()-appN("EGPCount"))
                if(AppEGPID["FreeEGP",array][I,vector2]:y()==0){AppEGPID["FreeEGP",array]:remove(I)}
                NoNewApp=1 break } }
            if(!NoNewApp){
                AppEGPID[ThisApp,vector2]=vec2(AppEGPID["FreeEGP",array][1,vector2]:x(),appN("EGPCount"))
                AppEGPID["FreeEGP",array][1,vector2][1]=AppEGPID["FreeEGP",array][1,vector2]:x()+appN("EGPCount")+1}
        AppLaunch=""}
        appN("Inrange",inrange(CursorPos,Screen:egpPos(egp())-appV2("Size")/2,Screen:egpPos(egp())+appV2("Size")/2))
        
        if(!Screen:egpHasObject(egp())){
            Screen:egpBox(egp(),vec2(100,appN("PosN")+Resolution:y()+77),appV2("Size")) Screen:egpColor(egp(),vec4(vec(40),220))
            Screen:egpBox(egp(2),vec2(),vec2(65,10)) Screen:egpParent(egp(2),egp()) Screen:egpAlpha(egp(2),0)
            Screen:egpBoxOutline(egp(9),vec2(),vec2(38)+Resolution/256) Screen:egpParent(egp(9),egp())
            for(I=1,romR("IconList"):count()){startMenuIcon(I) } }
        else{
        if(changed(appN("AllApps"))|!Screen:egpHasObject(egp(3))){for(I=egp(3),egp(8)){Screen:egpRemove(I)}
            if(!appN("AllApps")){
                appWhiteText(3,array("Settings","Reboot","Turn off","All Apps"),appV2("Size")*vec2(-0.5,0.5)+vec2(5,-40),9)
                appWhiteText(4,"Last apps",-appV2("Size")/2+vec2(4,20),7)
                appWhiteText(5,romR("LastApps"),-appV2("Size")/2+vec2(5,30),8)
                Screen:egpCircle(egp(6),-appV2("Size")/2+vec2(13,10),vec2(8,8)) Screen:egpColor(egp(6),vec(170)) Screen:egpParent(egp(6),egp())
                appWhiteText(7,owner():name():left(70/textSizeX(8)),-appV2("Size")/2+vec2(25,6),8) }
            else{
                appWhiteText(3,"< Back",appV2("Size")*vec2(-0.5,0.5)+vec2(5,-14),9)
                appWhiteText(4,"All apps",-appV2("Size")/2+vec2(4,9),7)
                appWhiteText(5,ROM["System",table]["AllApps",table]:keys(),-appV2("Size")/2+vec2(5,19),8)
                appWhiteText(6,"Long tap for add or delete icon",appV2("Size")*vec2(-0.5,0.5)+vec2(4,-22),7) Screen:egpColor(egp(6),vec(128))
                appScroller(7,"AAScroll",vec2(-26,-7),vec2(10,100),ROM["System",table]["AllApps",table]:keys():count(),8) Screen:egpColor(egp(7),vec(70)) } }
          
        appN("PosN",appN("PosN")+clamp(-appN("Active")*(appV2("Size"):y()/2+93)-appN("PosN"),-25,25))
        if(!appN("PosN")){AppClose=ThisApp}
        if(changed(appN("PosN"))){Power=25 
            #Graphics
            Screen:egpPos(egp(),vec2(100,appN("PosN")+Resolution:y()+77)) 
            Screen:egpAlpha(egp(),255-appN("PosN")*220/(appV2("Size"):y()/2+93)) Screen:egpAlpha(egp(5),255-appN("PosN")*255/(appV2("Size"):y()/2+93))
            for(I=1,romR("IconList"):count()){Screen:egpAlpha(egp(8+I*3),255-appN("PosN")*255/(appV2("Size"):y()/2+93))} }
        
        if(!changed(appN("PosN"))&(NowPower>=100|sysTimer(100))){
            if(appMouse()&!(appN("Inrange")|CursorPos==vec2(-1))){appN("Active",0)} #Close menu if not inrange
            if(!appN("AllApps")){
                #Last apps
                StartMenuCHLastApps=appChoiceHelper(-appV2("Size")/2+vec2(7,20),8):y()
                StartMenuEILastApps=egpAppInrange(-appV2("Size")/2+vec2(7,30),-appV2("Size")/2+vec2(70,68))
                if(changed(StartMenuEILastApps)){Screen:egpAlpha(egp(2),30*StartMenuEILastApps)}
                if(StartMenuEILastApps){
                    if(appClick()){StartMenuChoose=romR("LastApps")[StartMenuCHLastApps,string] appN("Active",0)}
                    Screen:egpPos(egp(2),-appV2("Size")/2+vec2(37,25+8*StartMenuCHLastApps)) }
                
                #DialogApp
                StartMenuCHDialogApp=appChoiceHelper(appV2("Size")*vec2(-0.5,0.5)-vec2(0,40),9):y()
                StartMenuEIDialogApp=egpAppInrange(appV2("Size")*vec2(-0.5,0.5)-vec2(0,40),appV2("Size")*vec2(-0.5,0.5)-vec2(-72,5))
                if(changed(StartMenuEIDialogApp)){Screen:egpAlpha(egp(2),30*StartMenuEIDialogApp)}
                if(StartMenuEIDialogApp){if(appClick()){
                    switch(StartMenuCHDialogApp){
                    case 0, StartMenuChoose="Settings" appN("Active",0) break
                    case 1, DialogApp="Reboot" appN("Active",0) break
                    case 2, DialogApp="Shutdown" appN("Active",0) break
                    case 3, appN("AllApps",1) break }}
                Screen:egpPos(egp(2),appV2("Size")*vec2(-0.5,0.5)+vec2(37,-35+StartMenuCHDialogApp*9)) } }
            else{
                #All apps
                StartMenuCHAllApps=appChoiceHelper(-appV2("Size")/2+vec2(7,9),8):y()
                StartMenuEIAllApps=egpAppInrange(-appV2("Size")/2+vec2(7,20),-appV2("Size")/2+vec2(70,105))
                if(changed(StartMenuEIAllApps)){Screen:egpAlpha(egp(2),30*StartMenuEIAllApps)}
                appScroller(7,"AAScroll",vec2(-26,-7),vec2(10,100),ROM["System",table]["AllApps",table]:keys():count(),8)
                Screen:egpSetText(egp(5),ROM["System",table]["AllApps",table]:keys():concat("\n",appN("AAScroll")+1,appN("AAScroll")+11))
                if(StartMenuEIAllApps){
                    if(appFastTap()){StartMenuChoose=ROM["System",table]["AllApps",table]:keys()[StartMenuCHAllApps+appN("AAScroll"),string] appN("Active",0)}
                    if(romR("IconList"):count()<12&appLongTap()){
                        #ROM["Apps",table]["StartMenu",table]["IconList",array][romR("IconList"):count()+1,string]=ROM["System",table]["AllApps",table]:keys()[StartMenuCHAllApps,string] romWrite()
                        romR("IconList",romR("IconList"):add(array(ROM["System",table]["AllApps",table]:keys()[StartMenuCHAllApps,string]))) romWrite()
                        startMenuIcon(romR("IconList"):count())
                        AppEGPID[ThisApp,vector2][2]=11+romR("IconList"):count()*3 }
                    Screen:egpPos(egp(2),-appV2("Size")/2+vec2(37,15+8*StartMenuCHAllApps)) }
                if(changed(egpAppInrange(appV2("Size")*vec2(-0.5,0.5)-vec2(-7,15),appV2("Size")*vec2(-0.5,0.5)-vec2(-70,5)))){Screen:egpAlpha(egp(2),30*egpAppInrange(appV2("Size")*vec2(-0.5,0.5)-vec2(-7,15),appV2("Size")*vec2(-0.5,0.5)-vec2(-70,5)))}
                if(egpAppInrange(appV2("Size")*vec2(-0.5,0.5)-vec2(-7,15),appV2("Size")*vec2(-0.5,0.5)-vec2(-70,5))){Screen:egpPos(egp(2),appV2("Size")*vec2(-0.5,0.5)-vec2(-37,9)) if(appClick()){appN("AllApps",0)}} }
            
            #Apps icons
            Screen:egpAlpha(egp(9),0)
            for(I=1,romR("IconList"):count()){StartMenuAppName=romR("IconList")[I,string] 
                if(egpInrange(egp(9+I*3))){StartMenuSelect=egp(9+I*3) Screen:egpAlpha(egp(9),150)
                    if(appFastTap()){StartMenuChoose=StartMenuAppName appN("Active",0)}
                    if(appLongTap()){
                        for(G=0,2){Screen:egpRemove(egp(9+romR("IconList"):count()*3+G))}
                        romR("IconList"):remove(I) romWrite()
                        for(J=I,romR("IconList"):count()){startMenuIcon(J)}
                        AppEGPID[ThisApp,vector2][2]=11+romR("IconList"):count()*3 } } }
            if(StartMenuSelect){Screen:egpPos(egp(9),Screen:egpPos(StartMenuSelect))}
            
        if(changed(StartMenuChoose)&StartMenuChoose){
            if(romR("LastApps"):count()>5){for(I=6,romR("LastApps"):count()){romR("LastApps"):remove(I)}}
            for(I=1,5){if(romR("LastApps")[I,string]==StartMenuChoose){romR("LastApps"):remove(I)}}
            romR("LastApps",array(StartMenuChoose):add(romR("LastApps"))) romWrite()}
}} if(appEnd()&StartMenuChoose){appLaunch(StartMenuChoose) StartMenuChoose=""}}}

#System dialog window
if(DialogApp&!App["StartMenu",table]){
    if(dialogApp("Reboot","Action",7,"Do you want to reboot system now?")){reset()}
    if(dialogApp("Shutdown","Action",6,"Do you want to shutdown system now?")){SystemOn=0}
    if(dialogApp("FileReadError","Action",10,"Reading error! Reboot?")){reset()}
       dialogApp("KeyboardEvent","Notify",10,"Don't use keyboard while tap to screen!")
}

#Functions
if(clk("CloseCTM")){for(I=0,2){Screen:egpRemove(AppEGPID["FreeEGP",array][1,vector2]:y()-I)}}

#Apps
if(appStart("Settings",vec2(300,150),vec(200),21)){ 
    if(appGraphics()){
        appBox(1,vec2(40,7),vec2(220,136),vec(255))
        appBox(2,vec2(-110,7),vec2(80,136),vec(228)) }else{
    
    #Draw app
    appChoiceMenu(3,vec2(-150,-61),"Activity",array("Wallpaper","Colors","Resolution","Other","About"))
    if(activityManager(6)){
        if(activity("Wallpaper")){
            if(activityStart()){
                appBlackText(6,"Choose your wallpapers",vec2(-60,-50))
                appR("WallpaperPack",array(vec(0,140,255),vec(255,200,50),vec(0,130,65),vec(130,40,50)))
                for(I=1,4){appBox(6+I,vec2(-75+45*I,-5),vec2(40,40),appR("WallpaperPack")[I,vector])}
                Screen:egpBox(egp(11),vec2(-30,47),vec2(40,40)) Screen:egpParent(egp(11),egp()) }else{
            Screen:egpColor(egp(11),ROM["System",table]["Wallpaper",vector])
            appN("WallpaperColorR",ROM["System",table]["Wallpaper",vector]:x()) appN("WallpaperColorG",ROM["System",table]["Wallpaper",vector]:y()) appN("WallpaperColorB",ROM["System",table]["Wallpaper",vector]:z())
            if(appMouse()){for(I=1,4){if(egpInrange(egp(6+I))){ROM["System",table]["Wallpaper",vector]=appR("WallpaperPack")[I,vector]}} romWrite()}
            if(appSliderDynamic(12,"WallpaperColorR",vec2(0,37),100,0,255)){ROM["System",table]["Wallpaper",vector][1]=appN("WallpaperColorR")}
            if(appSliderDynamic(15,"WallpaperColorG",vec2(0,47),100,0,255)){ROM["System",table]["Wallpaper",vector][2]=appN("WallpaperColorG")}
            if(appSliderDynamic(18,"WallpaperColorB",vec2(0,57),100,0,255)){ROM["System",table]["Wallpaper",vector][3]=appN("WallpaperColorB")} }}
        
        if(activity("Colors")){
            if(activityStart()){
                appBlackText(6,"Choose your theme color",vec2(-60,-50))
                appR("ThemePack",array(vec(150,0,0),vec(0,150,0),vec(50,100,255),vec(150)))
                for(I=1,4){appBox(6+I,vec2(-75+45*I,-5),vec2(40,40),appR("ThemePack")[I,vector])}
                Screen:egpBox(egp(11),vec2(-30,47),vec2(40,40)) Screen:egpParent(egp(11),egp()) }else{
            Screen:egpColor(egp(11),ROM["System",table]["Theme",vector]) Screen:egpColor(egp(3),ROM["System",table]["Theme",vector])
            appN("ThemeColorR",ROM["System",table]["Theme",vector]:x()) appN("ThemeColorG",ROM["System",table]["Theme",vector]:y()) appN("ThemeColorB",ROM["System",table]["Theme",vector]:z())
            if(appMouse()){for(I=1,4){if(egpInrange(egp(6+I))){ROM["System",table]["Theme",vector]=appR("ThemePack")[I,vector]}} romWrite()}
            if(appSliderDynamic(12,"ThemeColorR",vec2(0,37),100,0,255)){ROM["System",table]["Theme",vector][1]=appN("ThemeColorR")}
            if(appSliderDynamic(15,"ThemeColorG",vec2(0,47),100,0,255)){ROM["System",table]["Theme",vector][2]=appN("ThemeColorG")}
            if(appSliderDynamic(18,"ThemeColorB",vec2(0,57),100,0,255)){ROM["System",table]["Theme",vector][3]=appN("ThemeColorB")} }}
        
        if(activity("Resolution")){
            if(activityStart()){
                appN("ResolutionX",ROM["System",table]["Resolution",vector2]:x()) appN("ResolutionY",ROM["System",table]["Resolution",vector2]:y()) appV2("ResolutionXY",vec2(appN("ResolutionX"),appN("ResolutionY")))
                appBlackText(6,"Choose your resolution",vec2(-60,-50))
                appBox(7,vec2(-50,-30)+Resolution/12,Resolution/6,ROM["System",table]["Wallpaper",vector])
                appBox(8,7,vec2(),vec2(300,150)/6,vec(200))
                appBox(9,7,vec2(0,Resolution:y()/12-2.5),vec2(Resolution:x()/6,5),vec(40)) Screen:egpAlpha(egp(9),220)
                appBox(10,7,vec2(-Resolution:x()/12+100/6,Resolution:y()/12-65/6-5),vec2(200,130)/6,vec(60,60,60)) Screen:egpAlpha(egp(10),220) }else{
            if(changed(appN("ResolutionX")+appN("ResolutionY"))){
                appV2("ResolutionXY",vec2(appN("ResolutionX"),appN("ResolutionY")))
                Screen:egpBox(egp(7),vec2(-50,-30)+appV2("ResolutionXY")/12,appV2("ResolutionXY")/6)
                Screen:egpBox(egp(9),vec2(0,appV2("ResolutionXY"):y()/12-2.5),vec2(appV2("ResolutionXY"):x()/6,5))
                Screen:egpBox(egp(10),vec2(-appV2("ResolutionXY"):x()/12+100/6,appV2("ResolutionXY"):y()/12-75/6-5),vec2(200,150)/6) }
            if(appEditTextNumber(11,"ResolutionX",vec2(100,-20),60)){ROM["System",table]["Resolution",vector2]=appV2("ResolutionXY") romWrite()}
            if(appEditTextNumber(14,"ResolutionY",vec2(100,  0),60)){ROM["System",table]["Resolution",vector2]=appV2("ResolutionXY") romWrite()}
            if(appButton(17,"Reboot",vec2(115,60),vec2(50,15))){DialogApp="Settings Reboot"}  }}
        
        if(activity("Other")){
            if(activityStart()){
                appBlackText(6,"Load file:",vec2(-60,-50))
                fileList("Windows10/") appN("File",0)
                appN("Entity",ROM["System",table]["Control",number])
                appBlackText(7,"Your file - Win"+entity():id():toString()+".txt",vec2(150,65),10,2)
                appN("FullLoad",ROM["System",table]["FullLoad",number]) }else{
            if(fileLoadedList()){appArrayFieldUseCTM(8,"File",vec2(-10,15),vec2(110,100),fileReadList(),array("Load","Preview"))}
            if(appN("FileAction")==1){fileLoad("Windows10/"+fileReadList()[appN("File"),string]) appN("MakeLoad",1) appN("FileAction",0)}
            if(appN("FileAction")==2){fileLoad("Windows10/"+fileReadList()[appN("File"),string]) appN("MakeLoad",2) appN("FileAction",0)}
            if(appN("MakeLoad")==1&fileClk()){ROM=vonDecodeTable(fileRead()) appN("MakeLoad",0) romWrite()}
            if(appN("MakeLoad")==2&fileClk()){appS("FilePreview",vonDecodeTable(fileRead()):toString()) DialogApp="Settings FilePreview" appN("MakeLoad",0) romWrite()}
            
            if(appCheckBox(14,"FullLoad","FullLoad",vec2(50,-35))){ROM["System",table]["FullLoad",number]=appN("FullLoad") romWrite() DialogApp="Settings Reboot"}
            if(appButtonToggle(18,"Entity",vec2(90,-5),vec2(80,15),array("Entity","Screem"))){if(appN("Entity")){ROM["System",table]["Control",number]=1}else{ROM["System",table]["Control",number]=0} romWrite()}
        }}
        
        if(activity("About")){
            if(activityStart()){
                appBlackText(6,array(
                "Creator: scaled.",
                "    STEAM_0:1:52598362",
                "Windows 10.3 beta",
                "    Version: update 5",
                "    API Version: "+apiVersion():toString(),
                "    ROM Version: "+ROM["Version",string]),vec2(-60,-55),10)
                appBlackText(7,"Ops use: "+ops():toString(),vec2(-60,5))
                appBlackText(8,"Use by: "+find():name(),   vec2(-60,15))
                appBlackText(9,"Count of launched apps: "+App:count():toString(),vec2(-60,25)) }else{
            Screen:egpSetText(egp(7),"Ops use: "+ops():toString())
            Screen:egpSetText(egp(8),"Use by: "+find():name())
            Screen:egpSetText(egp(9),"Count of launched apps: "+App:count():toString())
            if(appButton(11,"Update",vec2(110,60),vec2(60,15))){DialogApp="Settings About" print("http://www.wiremod.com/forum/finished-contraptions/34849-windows-10-e2.html")}
            if(appButton(14,"Archive",vec2(40,60),vec2(60,15))){DialogApp="Settings Archive" print("https://copy.com/0YFZjT0J8Il0XITO")} }}
    }
    if(DialogApp){
        if(dialogApp("Settings Reboot","Action",10,"You want reboot?")){reset()}
           dialogApp("Settings About","BigNotify",10,"http://www.wiremod.com/forum/finished-contraptions/34849-windows-10-e2.html")
           dialogApp("Settings Archive","BigNotify",10,"https://copy.com/0YFZjT0J8Il0XITO")
           dialogApp("Settings FilePreview","FieldNotify",100,appS("FilePreview")) }
} appEnd()}



ThisApp="DialogApp"
if(appStart("DialogApp",vec2(250,50)+appV2("AddSize"),ROM["System",table]["Theme",vector]*0.8,7)){ 
    if(appGraphics()){appUniText(-1,appS("Text"),vec2(-115,-18),appN("TextSize"),0)
        if(appS("Type")=="BigNotify"){appUniText(-1,appS("Text"):explode("\n"):shortArray(240/textSizeX(appN("TextSize"))),vec2(-115,-18-appV2("AddSize"):y()/2),appN("TextSize")) } }else{
    if(appS("Type")=="Notify"){if(appButton(5,"OK",vec2(86,12),vec2(60,15))){appN("Answear",1)} }
    if(appS("Type")=="Action"){#Action
        if(appButton(1,"OK",vec2(16,12),vec2(60,15))){appN("Answear",1)}
        if(appButton(4,"Calcel",vec2(86,12),vec2(60,15))){AppClose="DialogApp"} }
    if(appS("Type")=="Input"){#Text input
        if(appButton(1,"OK",vec2(86,12),vec2(60,15))){appN("Answear",1) appS("OutText",appS("Input")) SysTextEnable=0}
        if(appEditTextString(4,"Input",vec2(-40,12),160)){appS("OutText",appS("Input"))} }
    if(appS("Type")=="FieldNotify"){#Notification
        Screen:egpSetText(egp(-1),"")
        appArrayFieldShort(1,"BigNotify",vec2(0,7.5),vec2(200,40+appN("TextSize")),appS("Text"):explode("\n")) }
} if(appEnd()){DialogApp=""}}



if(appStart("TaskM",vec2(300,150),vec(32,64,128),11)){ 
    if(appGraphics()){Screen:egpSetText(egp(-1),"TaskManager")}else{
    appChoiceMenu(1,vec2(-150,-61),"Activity",array("Running","All Apps","Icon List","ROM","Memory","EGPID","Device"))
    if(activityManager(4)){
        if(activity("Running")){
            if(appTimer(1000)){Update="TaskM Running"}
            #if(AppPos[ThisApp,number]==0){AppPos[ThisApp,number]=1}
            appArrayFieldUseCTM(4,"Running",vec2(40,4),vec2(220,130),AppPos:flip():toArray(),array("Kill","CallApp","Info"))
            if(appN("RunningAction")==1){AppClose=AppPos:flip()[appN("Running"),string] appN("RunningAction",0)}
            if(appN("RunningAction")==2){callApp(AppPos:flip()[appN("Running"),string]) appN("RunningAction",0)}
            if(appN("RunningAction")==3){DialogApp="TaskM AboutApp" appS("AboutApp",AppPos:flip()[appN("Running"),string]) appN("RunningAction",0)} }
        
        if(activity("ROM")){
            if(appTimer(1000)){Update="TaskM ROM"}
            appArrayField(4,"ROM",vec2(40,4),vec2(220,130),ROM:toString():explode("\n")) }
        
        if(activity("All Apps")){
            appArrayFieldUseCTM(4,"AllApps",vec2(40,4),vec2(220,130),ROM["System",table]["AllApps",table]:keys(),array("Run","Info"))
                if(appN("AllAppsAction")==1){appLaunch(ROM["System",table]["AllApps",table]:keys()[appN("AllApps"),string]) appN("AllAppsAction",0)}
                if(appN("AllAppsAction")==2){DialogApp="TaskM AboutApp" appS("AboutApp",ROM["System",table]["AllApps",table]:keys()[appN("AllApps"),string]) appN("AllAppsAction",0)}}
        
        if(activity("Icon List")){
            appArrayFieldUseCTM(4,"IconList",vec2(40,4),vec2(220,130),ROM["Apps",table]["StartMenu",table]["IconList",array],array("Run","Add","Delete","Info"))
                if(appN("IconListAction")==1){appLaunch(ROM["Apps",table]["StartMenu",table]["IconList",array][appN("IconList"),string]) appN("IconListAction",0)}
                if(appN("IconListAction")==2){DialogApp="TaskM Icon" appN("IconListAction",0)}
                if(appN("IconListAction")==3){ROM["Apps",table]["StartMenu",table]["IconList",array]:remove(appN("IconList")) romWrite() Update="TaskM IconList" appN("IconListAction",0)}
                if(appN("IconListAction")==4){DialogApp="TaskM AboutApp" appS("AboutApp",ROM["Apps",table]["StartMenu",table]["IconList",array][appN("IconList"),string]) appN("IconListAction",0)}}
        
        if(activity("Memory")){
            if(appTimer(1000)){Update="TaskM Memory"}
            appArrayField(4,"Memory",vec2(40,4),vec2(220,130),App:toString():explode("\n")) }
            
        if(activity("EGPID")){
            if(appTimer(1000)){Update="TaskM EGPID"}
            appArrayField(4,"EGPID",vec2(40,4),vec2(220,130),AppEGPID:toString():explode("\n")) }
        
        if(activity("Includes")){
            appArrayFieldUseCTM(4,"Includes",vec2(40,4),vec2(220,130),ROM["System",table]["Includes",array],array("Add","Delete","Inialize"))
                if(appN("IncludesAction")==1){DialogApp="TaskM Includes" appN("IncludesAction",0)}
                if(appN("IncludesAction")==2){ROM["System",table]["Includes",array]:remove(appN("Includes")) romWrite() Update="TaskM Includes" appN("IncludesAction",0)}
                if(appN("IncludesAction")==3){if(!ROM["System",table]["Includes",array]){ROM["System",table]["Includes",array]=array("Windows10/Apps/YourApp") romWrite()} appN("IncludesAction",0)} }
        
        if(activity("Device")){
            if(appTimer(1000)){Update="TaskM Device" appR("DeviceInOut",Device:inputs():add(Device:outputs()))}
            appArrayFieldUseCTM(4,"Device",vec2(40,4),vec2(220,130),appR("DeviceInOut"),array("Set String","Set Number","Print"))
                if(appN("DeviceAction")==1){DialogApp="TaskM SetString" appN("DeviceAction",0)}
                if(appN("DeviceAction")==2){DialogApp="TaskM SetNumber" appN("DeviceAction",0)}
                if(appN("DeviceAction")==3){DialogApp="TaskM Print" appN("DeviceAction",0)} }
    }
    
    if(DialogApp){
        dialogApp("TaskM AboutApp","BigNotify",10,
            "Name: "+appS("AboutApp")+
            "\nMemory: "+App[appS("AboutApp"),table]:count():toString()+" values"+
            "\nROM: "+ROM["Apps",table][appS("AboutApp"),table]:count():toString()+" values"+
            "\nAppPos: "+AppPos[appS("AboutApp"),number]:toString()+
            "\nNumber of EGPIDs: "+AppEGPID[appS("AboutApp"),vector2]:y():toString())
        if(dialogApp("TaskM Icon","Input",10,"Enter app name")){ROM["Apps",table]["StartMenu",table]["IconList",array][ROM["Apps",table]["StartMenu",table]["IconList",array]:count()+1,string]=glbS("DialogApp","OutText") romWrite() Update="TaskM IconList"}
        if(dialogApp("TaskM Includes","Input",10,"Enter app name")){ROM["System",table]["Includes",array][ROM["System",table]["Includes",array]:count()+1,string]=glbS("DialogApp","OutText") romWrite() Update="TaskM Includes"}
        if(dialogApp("TaskM SetString","Input",10,"Enter string")){Device[appR("DeviceInOut")[appN("Device"),string],string]=glbS("DialogApp","OutText")}
        if(dialogApp("TaskM SetNumber","Input",10,"Enter number")){Device[appR("DeviceInOut")[appN("Device"),string],number]=glbS("DialogApp","OutText"):toNumber()}
           dialogApp("TaskM Print","Notify",10,Device[appR("DeviceInOut")[appN("Device"),string],string]) }
    
} appEnd()}
#if(ROM["System",table]["Includes",array]){for(I=1,ROM["System",table]["Includes",array]:count()){#include ROM["System",table]["Includes",array][I,string]}}



if(appStart("Diagrams",vec2(300,150),vec(0,128,64),16)){
    if(appCreate()){if(romCreate()){ romN("Var1",12) romN("Var2",30) romN("Var3",20)} romLoadAppVars() }
    if(appGraphics()){appBox(1,vec2(40,7),vec2(220,136),vec(255))}else{

    #Text fields
    appEditTextNumber(2,"Var1",vec2(100,-45),60)
    appEditTextNumber(5,"Var2",vec2(100,-25),60)
    appEditTextNumber(8,"Var3",vec2(100,-5),60)
    
    #Find sum
    appN("VarSum",appN("Var1")+appN("Var2")+appN("Var3"))
    #Find persents
    appN("Var1Percent",appN("Var1")/appN("VarSum"))
    appN("Var2Percent",appN("Var2")/appN("VarSum"))
    appN("Var3Percent",appN("Var3")/appN("VarSum"))
    #Find max value
    appN("VarMax",max(appN("Var1Percent"),appN("Var2Percent"),appN("Var3Percent")))
    
    if(appChoiceMenu(11,vec2(-150,-60),"Mode",array("Circle","Boxes","Text"))){ #Choose mode
        #Second draw
        Screen:egpColor(egp(2),vec(255,220,220))
        Screen:egpColor(egp(5),vec(220,255,220))
        Screen:egpColor(egp(8),vec(220,220,255))
        #Clear old objects
        for(I=egp(14),egp(16)){Screen:egpRemove(I)}
        #Draw diagram
        if(appS("Mode")=="Circle"){
            Screen:egpWedge(egp(14),vec2(),vec2(50)) Screen:egpColor(egp(14),vec(150)) Screen:egpColor(egp(14),vec(255,0,0)) Screen:egpSize(egp(14),0)
            Screen:egpWedge(egp(15),vec2(),vec2(50)) Screen:egpColor(egp(15),vec(150)) Screen:egpColor(egp(15),vec(0,255,0)) Screen:egpSize(egp(15),-360*(appN("Var2Percent")+appN("Var3Percent")))
            Screen:egpWedge(egp(16),vec2(),vec2(50)) Screen:egpColor(egp(16),vec(150)) Screen:egpColor(egp(16),vec(0,0,255)) Screen:egpSize(egp(16),-360*appN("Var3Percent")-0.1)
            for(I=egp(14),egp(16)){Screen:egpParent(I,egp())} }
        if(appS("Mode")=="Boxes"){
            appBox(14,vec2(),vec2(),vec(255,0,0))
            appBox(15,vec2(),vec2(),vec(0,255,0))
            appBox(16,vec2(),vec2(),vec(0,0,255)) }
        if(appS("Mode")=="Text"){
            appBlackText(14,(int(appN("Var1Percent")*1000)/10):toString()+"%",vec2(0,-50),25,1) Screen:egpColor(egp(14),vec(255,0,0))
            appBlackText(15,(int(appN("Var2Percent")*1000)/10):toString()+"%",vec2(0,-10),25,1) Screen:egpColor(egp(15),vec(0,255,0))
            appBlackText(16,(int(appN("Var3Percent")*1000)/10):toString()+"%",vec2(0, 30),25,1) Screen:egpColor(egp(16),vec(0,0,255)) } 
            appN("Update",1) }else{
    
    if(changed(appN("VarSum"))){appN("Update",1)}
    if(appN("Update")){appN("Update",0)
        #Third rendering
        if(appS("Mode")=="Circle"){
            Screen:egpSize(egp(14),0)
            Screen:egpSize(egp(15),-360*(appN("Var2Percent")+appN("Var3Percent")))
            Screen:egpSize(egp(16),-360*appN("Var3Percent")-0.1) }
            
        if(appS("Mode")=="Boxes"){
            Screen:egpBox(egp(14),vec2(-40,60-appN("Var1Percent")/appN("VarMax")*50),vec2(30,appN("Var1Percent")/appN("VarMax")*100))
            Screen:egpBox(egp(15),vec2(0,  60-appN("Var2Percent")/appN("VarMax")*50),vec2(30,appN("Var2Percent")/appN("VarMax")*100))
            Screen:egpBox(egp(16),vec2(40, 60-appN("Var3Percent")/appN("VarMax")*50),vec2(30,appN("Var3Percent")/appN("VarMax")*100)) }
            
        if(appS("Mode")=="Text"){
            Screen:egpSetText(egp(14),(int(appN("Var1Percent")*1000)/10):toString()+"%")
            Screen:egpSetText(egp(15),(int(appN("Var2Percent")*1000)/10):toString()+"%")
            Screen:egpSetText(egp(16),(int(appN("Var3Percent")*1000)/10):toString()+"%") } }
}} appEndSave()}



if(appStart("Calculator",vec2(120,160),vec(240),8)){
    if(appGraphics()){
        appBox(1,vec2(0,20),vec2(120,120),vec(220))
        appBlackText(2,"+\n7\n4\n1",vec2(-80,-40),30,vec2(70,140),1)
        appBlackText(3,"-\n8\n5\n2",vec2(-50,-40),30,vec2(70,140),1)
        appBlackText(4,"*\n9\n6\n3",vec2(-20,-40),30,vec2(70,140),1)
        appBlackText(5,"/\n←\n0\n>",vec2( 10,-40),30,vec2(70,140),1)
        appBox(6,vec2(),vec2(30),vec())
        appBlackText(7,"4",vec2(-57,-60),20)
        appBlackText(8,"2+2=4",vec2(-57,-65),7) }else{
        
    appV2("Choice",appChoiceHelper(vec2(-60,-40),30))
    if(inrange(appV2("Choice"),vec2(0,0),vec2(3,3))){
        Screen:egpAlpha(egp(6),180) Screen:egpPos(egp(6),appV2("Choice")*30+vec2(-45,-25))
        if(appClick()){switch(appV2("Choice")){
            case vec2(0,1), appN("Button",7) break
            case vec2(0,2), appN("Button",4) break
            case vec2(0,3), appN("Button",1) break
            case vec2(1,1), appN("Button",8) break
            case vec2(1,2), appN("Button",5) break
            case vec2(1,3), appN("Button",2) break
            case vec2(2,1), appN("Button",9) break
            case vec2(2,2), appN("Button",6) break
            case vec2(2,3), appN("Button",3) break
            case vec2(0,0), appS("Action","+") break
            case vec2(1,0), appS("Action","-") break
            case vec2(2,0), appS("Action","*") break
            case vec2(3,0), appS("Action","/") break
            case vec2(3,1), appN("Delete",1) break
            case vec2(3,2), appN("Button",-1) break
            case vec2(3,3), appN("State",3) appN("Button",0) break }}
    }else{Screen:egpAlpha(egp(6),0)}
    
    if(appN("State")==0){
        if(appN("Delete")){appN("N1",appN("N1"):toString():left(appN("N1"):toString():length()-1):toNumber()) appN("Delete",0)}
        if(appN("Button")!=-1){if(changed(appN("Button"))){appN("N1",appN("N1")*10+appN("Button"))}}
        else{appN("N1",appN("N1")*10) appN("Button",0)}
        Screen:egpSetText(egp(7),appN("N1"):toString())
        appS("Field2",appN("N1"):toString()) }
    
    if(changed(appS("Action"))&appS("Action")){appN("State",1) appN("Button",0) appS("Field2",appN("N1"):toString()+appS("Action")) }
    
    if(appN("State")==1){
        if(appN("Delete")){appN("N2",appN("N2"):toString():left(appN("N2"):toString():length()-1):toNumber()) appN("Delete",0)}
        if(appN("Button")!=-1){if(changed(appN("Button"))){appN("N2",appN("N2")*10+appN("Button"))}}
        else{appN("N2",appN("N2")*10) appN("Button",0)}
        Screen:egpSetText(egp(7),appN("N2"):toString())
        appS("Field2",appN("N1"):toString()+appS("Action")+appN("N2"):toString()) }
    
    if(appN("State")==3){
        if(changed(appN("Button"))&appN("Button")){appN("State",0)}
        if(appN("N1")|appN("N2")){
            if(appS("Action")=="+"){appN("Resuilt",appN("N1")+appN("N2")) appN("N1",0) appN("N2",0)}
            if(appS("Action")=="-"){appN("Resuilt",appN("N1")-appN("N2")) appN("N1",0) appN("N2",0)}
            if(appS("Action")=="*"){appN("Resuilt",appN("N1")*appN("N2")) appN("N1",0) appN("N2",0)}
            if(appS("Action")=="/"){appN("Resuilt",appN("N1")/appN("N2")) appN("N1",0) appN("N2",0)}
            Screen:egpSetText(egp(7),appN("Resuilt"):toString())
            appS("Field2",appS("Field2")+"="+appN("Resuilt")) } }
    Screen:egpSetText(egp(8),appS("Field2"))
} appEnd()}



if(appStart("Clicker",vec2(300,150),vec(64,128,255),9)){
    if(appCreate()){
        romCreate() romLoadAppVars()
        appR("Cost",array(100,500,2000,4500,10000,22500,65300,98000,204560,999999))
        appR("ScopeM",array(0.2,0.5,1,2,6,16,64,128,256,-1)) }
    if(appGraphics()){
        appBox(1,vec2(-100,-50),vec2(100,20),vec(255))
        appBox(2,vec2(-100,17.5),vec2(100,115),vec())
        appBox(3,vec2(50,7),vec2(200,136),vec(64,128,255)*0.7)
        appBlackText(4,"",vec2(-145,-55))
        Screen:egpLineStrip(egp(5),array(vec2(-50,-60),vec2(150,-60),vec2(150,-33),vec2(-50,-33),vec2(-50,-6),vec2(150,-6),vec2(150,21),vec2(-50,21),vec2(-50,48),vec2(150,48),vec2(150,75),vec2(-50,75),vec2(-50,-60),vec2(-50,75),
        vec2(50,75),vec2(50,-60),vec2(150,-60),vec2(150,75))		) Screen:egpParent(egp(5),egp())
        appWhiteText(6,array("Human","100\n","Mashine","2000\n","Robot","10000\n","HAAAX!","65300\n","Developer","204560"):concat("\n"),vec2(-50,-56),9,vec2(100,160),1)
        appWhiteText(7,array("Sportsman","500\n","AK47","4500\n","Computer","22500\n","Cheat","98000\n","Buy win","999999"):concat("\n"),vec2( 50,-56),9,vec2(100,160),1)
        appBox(8,vec2(),vec2(100,27),vec(255))
        Screen:egpCircle(egp(9),vec2(),vec2(20)) Screen:egpParent(egp(9),egp(2))
         }else{
    if(egpAppInrange(vec2(-150,-40),vec2(-50,75))&appClick()){appN("Scope",appN("Scope")+1) if(appN("Size")<30){appN("Size",appN("Size")+3)}}
    appV2("Choice",appChoiceHelper(vec2(-50,-60),vec2(100,27)))
    if(inrange(appV2("Choice"),vec2(),vec2(1,4))){
        appN("ChoiceN",appV2("Choice"):x()+appV2("Choice"):y()*2+1)
        if(appClick()&appN("Scope")>appR("Cost")[appN("ChoiceN"),number]){
            if(appN("ChoiceN")==10){DialogApp="Clicker Win"}
            appN("MuiltiPlier",appN("MuiltiPlier")+appR("ScopeM")[appN("ChoiceN"),number])
            appN("Scope",appN("Scope")-appR("Cost")[appN("ChoiceN"),number]) }
        Screen:egpPos(egp(8),appV2("Choice")*vec2(100,27)+vec2(0,-46.5)) Screen:egpAlpha(egp(8),100)}else{Screen:egpAlpha(egp(8),0)}
    if(appN("Size")>0){appN("Size",appN("Size")-1)}
    appN("Scope",appN("Scope")+appN("MuiltiPlier"))
    
    Screen:egpSetText(egp(4),int(appN("Scope")):toString())
    Screen:egpSize(egp(9),vec2(20+appN("Size")+sin(AppTimer*appN("MuiltiPlier")^0.4)*4))
    Screen:egpColor(egp(9),vec(sin(AppTimer)*127+128,sin(AppTimer+120)*127+128,sin(AppTimer+240)*127+128))
    
    if(appTimer(1000)){appToromN("Scope") appToromN("MuiltiPlier") romWrite()}
    if(dialogApp("Clicker Win","Action",10,"You are winner! Try again?")){appN("Scope",0) appN("MuiltiPlier",0)}
} appEnd()}



##include "Windows/Includes/DeviceKit"
##include "Windows/Includes/DeveloperKit"
}
